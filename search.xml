<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JS小技巧]]></title>
      <url>/2017/10/26/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>JS小技巧.</p>
<a id="more"></a>
<h3 id="值交换"><a href="#值交换" class="headerlink" title="值交换"></a>值交换</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// (传统，但需要借助临时变量)</span></div><div class="line"><span class="keyword">var</span> temp = a; a = b; b = temp; </div><div class="line"></div><div class="line"><span class="comment">// (需要两个整数)</span></div><div class="line">a ^= b; b ^= a; a ^= b; </div><div class="line"></div><div class="line"><span class="comment">// (借助数组)</span></div><div class="line">b = [a, a = b][<span class="number">0</span>];</div><div class="line"></div><div class="line"><span class="comment">// (ES6，解构赋值) </span></div><div class="line">[a, b] = [b, a]; </div><div class="line"></div><div class="line"><span class="comment">//  (小学奥赛题)</span></div><div class="line">a = a + b; b = a - b; a = a - b;</div></pre></td></tr></table></figure>
<h3 id="去掉小数"><a href="#去掉小数" class="headerlink" title="去掉小数"></a>去掉小数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">parseInt</span>(num)</div><div class="line">~~num</div><div class="line">num &gt;&gt; <span class="number">0</span></div><div class="line">num | <span class="number">0</span></div></pre></td></tr></table></figure>
<h3 id="判断-x-是否是整数"><a href="#判断-x-是否是整数" class="headerlink" title="判断 x 是否是整数"></a>判断 x 是否是整数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isInt</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> (x ^ <span class="number">0</span>) === x</div><div class="line">&#125;</div><div class="line"><span class="comment">// return Math.round(x) === x</span></div><div class="line"><span class="comment">// return (typeof x === 'number') &amp;&amp; (x % 1 === 0)</span></div><div class="line"><span class="comment">// ES6 -&gt; Number.isInteger()</span></div></pre></td></tr></table></figure>
<h3 id="递归求阶乘"><a href="#递归求阶乘" class="headerlink" title="递归求阶乘"></a>递归求阶乘</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> (n &gt; <span class="number">1</span>) ? n * f(n - <span class="number">1</span>) : n</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="判断符号是否相同"><a href="#判断符号是否相同" class="headerlink" title="判断符号是否相同"></a>判断符号是否相同</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sameSign</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> (a ^ b) &gt;= <span class="number">0</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="克隆数组"><a href="#克隆数组" class="headerlink" title="克隆数组"></a>克隆数组</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arr.slice(<span class="number">0</span>)</div></pre></td></tr></table></figure>
<h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ES6</span></div><div class="line"><span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr))</div><div class="line"></div><div class="line"><span class="comment">// ES5</span></div><div class="line">arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">ele, index, array</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> index===array.indexOf(ele)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="数组最大值"><a href="#数组最大值" class="headerlink" title="数组最大值"></a>数组最大值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxArr</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, arr)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="数组最小值"><a href="#数组最小值" class="headerlink" title="数组最小值"></a>数组最小值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">minArr</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, arr)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="随机获取数组的一个成员"><a href="#随机获取数组的一个成员" class="headerlink" title="随机获取数组的一个成员"></a>随机获取数组的一个成员</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomOne</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> arr[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * arr.length)]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="产生随机颜色"><a href="#产生随机颜色" class="headerlink" title="产生随机颜色"></a>产生随机颜色</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomColor</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">`#<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">16</span>).substr(<span class="number">2</span>, <span class="number">6</span>)&#125;</span>`</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="随机生成指定长度的字符串"><a href="#随机生成指定长度的字符串" class="headerlink" title="随机生成指定长度的字符串"></a>随机生成指定长度的字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomStr</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> standard = <span class="string">'abcdefghijklmnopqrstuvwxyz9876543210'</span></div><div class="line">  <span class="keyword">let</span> len = standard.length</div><div class="line">  <span class="keyword">let</span> result = <span class="string">''</span></div><div class="line"></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">    result += standard.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * len))</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj))</div></pre></td></tr></table></figure>
<h3 id="美化console"><a href="#美化console" class="headerlink" title="美化console"></a>美化console</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.info(<span class="string">"%c哈哈"</span>, <span class="string">"color: #3190e8; font-size: 30px; font-family: sans-serif"</span>);</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> JS 基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS简写技巧]]></title>
      <url>/2017/10/26/JS%E7%AE%80%E5%86%99%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>JS简写技巧.</p>
<a id="more"></a>
<h2 id="初级篇"><a href="#初级篇" class="headerlink" title="初级篇"></a>初级篇</h2><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> x = <span class="number">20</span>;</div><div class="line"><span class="keyword">let</span> answer;</div><div class="line"><span class="keyword">if</span> (x &gt; <span class="number">10</span>) &#123;</div><div class="line">    answer = <span class="string">'greater than 10'</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    answer = <span class="string">'less than 10'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> answer = x &gt; <span class="number">10</span> ? <span class="string">'greater than 10'</span> : <span class="string">'less than 10'</span>;</div></pre></td></tr></table></figure>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; allImgs.length; i++)</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">of</span> allImgs)</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">logArrayElements</span>(<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"a["</span> + index + <span class="string">"] = "</span> + element);</div><div class="line">&#125;</div><div class="line"></div><div class="line">[<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>].forEach(logArrayElements);</div><div class="line"><span class="comment">// logs:</span></div><div class="line"><span class="comment">// a[0] = 2</span></div><div class="line"><span class="comment">// a[1] = 5</span></div><div class="line"><span class="comment">// a[2] = 9</span></div></pre></td></tr></table></figure>
<h3 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> x;</div><div class="line"><span class="keyword">let</span> y;</div><div class="line"><span class="keyword">let</span> z = <span class="number">3</span>;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">let</span> x, y, z = <span class="number">3</span>;</div></pre></td></tr></table></figure>
<h3 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (like === <span class="literal">true</span>) </div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">if</span> (like)</div></pre></td></tr></table></figure>
<h3 id="十进制数"><a href="#十进制数" class="headerlink" title="十进制数"></a>十进制数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1e7</span>; i++)</div></pre></td></tr></table></figure>
<h3 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> buffer = <span class="string">'sasasasasasa'</span></div><div class="line">            + <span class="string">'dsdsdsds'</span></div><div class="line">            + <span class="string">'ddsdsdsds'</span></div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> buffer = <span class="string">`sasasasasasa</span></div><div class="line"><span class="string">            dsdsdsds</span></div><div class="line"><span class="string">            ddsdsdsds`</span></div></pre></td></tr></table></figure>
<h2 id="高级篇"><a href="#高级篇" class="headerlink" title="高级篇"></a>高级篇</h2><h3 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (variable1 !== <span class="literal">null</span> || variable1 !== <span class="literal">undefined</span> || variable1 !== <span class="string">''</span>) &#123;</div><div class="line">     <span class="keyword">let</span> variable2 = variable1;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> variable2 = variable1  || <span class="string">'new'</span>;</div></pre></td></tr></table></figure>
<h3 id="默认赋值"><a href="#默认赋值" class="headerlink" title="默认赋值"></a>默认赋值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> dbHost;</div><div class="line"><span class="keyword">if</span> (process.env.DB_HOST) &#123;</div><div class="line">  dbHost = process.env.DB_HOST;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  dbHost = <span class="string">'localhost'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> dbHost = process.env.DB_HOST || <span class="string">'localhost'</span>;</div></pre></td></tr></table></figure>
<h3 id="对象属性"><a href="#对象属性" class="headerlink" title="对象属性"></a>对象属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">x</span> : x, <span class="attr">y</span> : y&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> obj = &#123;x, y&#125;;</div></pre></td></tr></table></figure>
<h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Hello'</span>, name);</div><div class="line">&#125;</div><div class="line"> </div><div class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Loaded'</span>)</div><div class="line">&#125;, <span class="number">2000</span>);</div><div class="line"> </div><div class="line">list.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(item);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">sayHello = <span class="function"><span class="params">name</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Hello'</span>, name);</div><div class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Loaded'</span>), <span class="number">2000</span>);</div><div class="line">list.forEach(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">console</span>.log(item));</div></pre></td></tr></table></figure>
<h3 id="隐式返回值"><a href="#隐式返回值" class="headerlink" title="隐式返回值"></a>隐式返回值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">calcCircumference</span>(<span class="params">diameter</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.PI * diameter</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">calcCircumference = <span class="function"><span class="params">diameter</span> =&gt;</span> (</div><div class="line">  <span class="built_in">Math</span>.PI * diameter;</div><div class="line">)</div></pre></td></tr></table></figure>
<h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">volume</span>(<span class="params">l, w, h</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (w === <span class="literal">undefined</span>)</div><div class="line">    w = <span class="number">3</span>;</div><div class="line">  <span class="keyword">if</span> (h === <span class="literal">undefined</span>)</div><div class="line">    h = <span class="number">4</span>;</div><div class="line">  <span class="keyword">return</span> l * w * h;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">volume = <span class="function">(<span class="params">l, w = <span class="number">3</span>, h = <span class="number">4</span> </span>) =&gt;</span> (l * w * h);</div><div class="line">volume(<span class="number">2</span>) <span class="comment">//output: 24</span></div></pre></td></tr></table></figure>
<h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> welcome = <span class="string">'You have logged in as '</span> + first + <span class="string">' '</span> + last + <span class="string">'.'</span></div><div class="line"><span class="keyword">const</span> db = <span class="string">'http://'</span> + host + <span class="string">':'</span> + port + <span class="string">'/'</span> + database;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">const</span> welcome = <span class="string">`You have logged in as <span class="subst">$&#123;first&#125;</span> <span class="subst">$&#123;last&#125;</span>`</span>;</div><div class="line"><span class="keyword">const</span> db = <span class="string">`http://<span class="subst">$&#123;host&#125;</span>:<span class="subst">$&#123;port&#125;</span>/<span class="subst">$&#123;database&#125;</span>`</span>;</div></pre></td></tr></table></figure>
<h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> observable = <span class="built_in">require</span>(<span class="string">'mobx/observable'</span>);</div><div class="line"><span class="keyword">const</span> action = <span class="built_in">require</span>(<span class="string">'mobx/action'</span>);</div><div class="line"><span class="keyword">const</span> runInAction = <span class="built_in">require</span>(<span class="string">'mobx/runInAction'</span>);</div><div class="line"><span class="keyword">const</span> store = <span class="keyword">this</span>.props.store;</div><div class="line"><span class="keyword">const</span> form = <span class="keyword">this</span>.props.form;</div><div class="line"><span class="keyword">const</span> loading = <span class="keyword">this</span>.props.loading;</div><div class="line"><span class="keyword">const</span> errors = <span class="keyword">this</span>.props.errors;</div><div class="line"><span class="keyword">const</span> entity = <span class="keyword">this</span>.props.entity;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"><span class="keyword">import</span> &#123; observable, action, runInAction &#125; <span class="keyword">from</span> <span class="string">'mobx'</span>;</div><div class="line"><span class="keyword">const</span> &#123; store, form, loading, errors, entity &#125; = <span class="keyword">this</span>.props;</div><div class="line"></div><div class="line"><span class="comment">// 甚至可以指定自己的变量名</span></div><div class="line"><span class="keyword">const</span> &#123; store, form, loading, errors, <span class="attr">entity</span>:contact &#125; = <span class="keyword">this</span>.props;</div></pre></td></tr></table></figure>
<h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// joining arrays</span></div><div class="line"><span class="keyword">const</span> odd = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>];</div><div class="line"><span class="keyword">const</span> nums = [<span class="number">2</span> ,<span class="number">4</span> , <span class="number">6</span>].concat(odd);</div><div class="line"> </div><div class="line"><span class="comment">// cloning arrays</span></div><div class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</div><div class="line"><span class="keyword">const</span> arr2 = arr.slice( )</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line"></div><div class="line"><span class="comment">// joining arrays</span></div><div class="line"><span class="keyword">const</span> odd = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span> ];</div><div class="line"><span class="keyword">const</span> nums = [<span class="number">2</span> ,<span class="number">4</span> , <span class="number">6</span>, ...odd];</div><div class="line"><span class="built_in">console</span>.log(nums); <span class="comment">// [ 2, 4, 6, 1, 3, 5 ]</span></div><div class="line"> </div><div class="line"><span class="comment">// cloning arrays</span></div><div class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</div><div class="line"><span class="keyword">const</span> arr2 = [...arr];</div><div class="line"></div><div class="line"><span class="comment">// 和 concat( ) 功能不同的是，用户可以使用扩展运算符在任何一个数组中插入另一个数组。</span></div><div class="line"><span class="keyword">const</span> odd = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span> ];</div><div class="line"><span class="keyword">const</span> nums = [<span class="number">2</span>, ...odd, <span class="number">4</span> , <span class="number">6</span>];</div><div class="line"></div><div class="line"><span class="comment">// 也可以将展开运算符和 ES6 解构符号结合使用：</span></div><div class="line"><span class="keyword">const</span> &#123; a, b, ...z &#125; = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span>, <span class="attr">d</span>: <span class="number">4</span> &#125;;</div><div class="line"><span class="built_in">console</span>.log(a) <span class="comment">// 1</span></div><div class="line"><span class="built_in">console</span>.log(b) <span class="comment">// 2</span></div><div class="line"><span class="built_in">console</span>.log(z) <span class="comment">// &#123; c: 3, d: 4 &#125;</span></div></pre></td></tr></table></figure>
<h3 id="强制参数"><a href="#强制参数" class="headerlink" title="强制参数"></a>强制参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">bar</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span>(bar === <span class="literal">undefined</span>) &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Missing parameter!'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> bar;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">mandatory = <span class="function"><span class="params">( )</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Missing parameter!'</span>);</div><div class="line">&#125;</div><div class="line">foo = <span class="function">(<span class="params">bar = mandatory( </span>)) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> bar;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Array-find"><a href="#Array-find" class="headerlink" title="Array.find"></a>Array.find</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> pets = [</div><div class="line">  &#123; <span class="attr">type</span>: <span class="string">'Dog'</span>, <span class="attr">name</span>: <span class="string">'Max'</span>&#125;,</div><div class="line">  &#123; <span class="attr">type</span>: <span class="string">'Cat'</span>, <span class="attr">name</span>: <span class="string">'Karl'</span>&#125;,</div><div class="line">  &#123; <span class="attr">type</span>: <span class="string">'Dog'</span>, <span class="attr">name</span>: <span class="string">'Tommy'</span>&#125;,</div><div class="line">]</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">findDog</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;pets.length; ++i) &#123;</div><div class="line">    <span class="keyword">if</span>(pets[i].type === <span class="string">'Dog'</span> &amp;&amp; pets[i].name === name) &#123;</div><div class="line">      <span class="keyword">return</span> pets[i];</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">pet = pets.find(<span class="function"><span class="params">pet</span> =&gt;</span> pet.type ===<span class="string">'Dog'</span> &amp;&amp; pet.name === <span class="string">'Tommy'</span>);</div><div class="line"><span class="built_in">console</span>.log(pet); <span class="comment">// &#123; type: 'Dog', name: 'Tommy' &#125;</span></div></pre></td></tr></table></figure>
<h3 id="Object-key"><a href="#Object-key" class="headerlink" title="Object [key]"></a>Object [key]</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span>(<span class="params">values</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span>(!values.first)</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">  <span class="keyword">if</span>(!values.last)</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(validate(&#123;<span class="attr">first</span>:<span class="string">'Bruce'</span>,<span class="attr">last</span>:<span class="string">'Wayne'</span>&#125;)); <span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="comment">// 简写</span></div><div class="line"></div><div class="line"><span class="comment">// object validation rules</span></div><div class="line"><span class="keyword">const</span> schema = &#123;</div><div class="line">  first: &#123;</div><div class="line">    required:<span class="literal">true</span></div><div class="line">  &#125;,</div><div class="line">  last: &#123;</div><div class="line">    required:<span class="literal">true</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">// universal validation function</span></div><div class="line"><span class="keyword">const</span> validate = <span class="function">(<span class="params">schema, values</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">for</span>(field <span class="keyword">in</span> schema) &#123;</div><div class="line">    <span class="keyword">if</span>(schema[field].required) &#123;</div><div class="line">      <span class="keyword">if</span>(!values[field]) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(validate(schema, &#123;<span class="attr">first</span>:<span class="string">'Bruce'</span>&#125;)); <span class="comment">// false</span></div><div class="line"><span class="built_in">console</span>.log(validate(schema, &#123;<span class="attr">first</span>:<span class="string">'Bruce'</span>,<span class="attr">last</span>:<span class="string">'Wayne'</span>&#125;)); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<h3 id="双位操作符"><a href="#双位操作符" class="headerlink" title="双位操作符"></a>双位操作符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Math</span>.floor(<span class="number">4.9</span>) === <span class="number">4</span>  <span class="comment">//true</span></div><div class="line"></div><div class="line"><span class="comment">// 简写为</span></div><div class="line">~~<span class="number">4.9</span> === <span class="number">4</span>  <span class="comment">//true</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> JS 基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[web服务器、应用服务器、web容器、反向代理服务器区别联系]]></title>
      <url>/2017/10/26/%E8%BD%AC%E8%BD%BD/%E4%B8%80%E6%96%87%E7%9C%8B%E6%87%82web%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%81%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%81web%E5%AE%B9%E5%99%A8%E3%80%81%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/</url>
      <content type="html"><![CDATA[<p>一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系</p>
<a id="more"></a>
<p>转载自： <a href="http://www.cnblogs.com/vipyoumay/p/7455431.html" target="_blank" rel="external">http://www.cnblogs.com/vipyoumay/p/7455431.html</a>.</p>
<p><html></html></p>
<p><head><br>  <title>Evernote Export</title><br>  <basefont face="微软雅黑" size="2"><br>  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"><br>  <meta name="exporter-version" content="Evernote Windows/305825 (zh-CN, DDL); Windows/10.0.15063 (Win64);"><br>  <style><br>    body, td {<br>      font-family: 微软雅黑;<br>      font-size: 10pt;<br>    }<br>  </style><br></head></p>
<p><body><br><a name="11170"></a></body></p>
<p><div><br><span><div><br></div><div style="font-size: 16px; display: inline-block;"><div style="background-color: rgb(230, 230, 230); font-size: 14px;"><div style="min-width: 0px; background-color: rgb(255, 255, 255); box-shadow: rgba(100, 100, 100, 0.298039) 0px 2px 6px;"><div style="text-align: left;"><div style="text-overflow: ellipsis; overflow: hidden; word-break: break-all; font-size: 14px;"><div style="text-overflow: ellipsis; overflow: hidden; word-break: break-all;"><div><h1 style="float: left; margin: 0px 0px 10px; padding: 0px 0px 0px 1px; clear: both; font-size: 150%; width: auto; border: 0px;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html" style="margin: 0px; padding: 0px; outline: none; transition: all 0.4s linear 0s; -webkit-transition: all 0.4s linear 0s; font-size: 150%; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; font-weight: bold; line-height: 1.5em; color: rgb(33, 117, 155); text-decoration: none;" target="_blank" rel="external">一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系</a></h1></div><div style="margin:0px;padding:0px;clear:both;"></div><div style="margin: 0px; padding: 0px; font-size: 14px;"><div style="margin: 0px 0px 20px; padding: 0px; word-break: break-word;"><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">我们知道，不同肤色的人外貌差别很大，而双胞胎的辨识很难。有意思的是Web服务器/Web容器/Web应用程序服务器/反向代理有点像四胞胎，在网络上经常一起出现。本文将带读者对这四个相似概念如何区分。</span></div></blockquote><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#1-一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1. 一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系</a></li><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#11-web服务器概念与基本原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.1. Web服务器概念与基本原理</a></li><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#111-web服务器的历史" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.1.1. Web服务器的历史</a></li><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#112-web服务器工作原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.1.2. Web服务器工作原理</a></li></ul><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#12-web应用程序容器概念与基本原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.2. Web应用程序容器概念与基本原理</a></li><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#121-web应用程序容器的由来" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.2.1. Web应用程序容器的由来</a></li><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#122-web应用程序容器的基本工作原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.2.2. Web应用程序容器的基本工作原理</a></li></ul><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#13-web应用程序服务器概念及基本原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.3. Web应用程序服务器概念及基本原理</a></li><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#14-反向代理概念与基本原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.4. 反向代理概念与基本原理</a></li><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#141-反向代理基本概念" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.4.1. 反向代理基本概念</a></li><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#142-反向代理基本工作原理" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.4.2. 反向代理基本工作原理</a></li></ul><li style="margin: 0px; padding: 0px; list-style: none;"><a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#15-总结" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 25px; color: black; text-decoration: underline;" target="_blank" rel="external">1.5. 总结</a></li></ul></ul><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h2 style="padding: 0px; font-size: 21px; margin: 10px 0px;"><span style="font-size: 21px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.1. Web服务器概念与基本原理</span></h2><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.1.1. Web服务器的历史</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">1989年，互联网之父Berners-Lee向其雇主CERN提出了一个新项目，目的是通过使用超文本系统来缓解科学家之间的信息交流。该项目导致Berners-Lee在1990年编写了两个方案：</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一个名为WorldWideWeb的浏览器。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">世界上第一个网络服务器，后来被称为CERN httpd，它运行在NeXTSTEP上</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">在1991年至1994年期间，用于通过万维网冲浪和交换数据的早期技术的简单性和有效性有助于将其移植到许多不同的操作系统，并将其用于科学组织和大学，然后传播到行业。</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">1994年，Berners-Lee决定组建万维网联盟（W3C），通过标准化过程来管理涉及的许多技术（HTTP，HTML等）的进一步发展。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">就是这台服务器：</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:339px;height:255px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image.png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Web服务器的主要功能是存储，处理和传递网页给客户。客户端和服务器之间的通信使用超文本传输协议（HTTP）进行。交付的页面最常见的是HTML文档，除了文本内容之外，还可能包含图像，样式表和脚本。</span></div></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一个用户代理，通常是web浏览器或web爬虫，通过发起一个HTTP请求以获取服务器资源，服务器根据请求返回该资源或由于某种原因响应错误消息。该资源通常是服务器辅助存储上的真实文件，但这不一定是这种情况，取决于Web服务器的实现方式。</span></div></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:530px;height:153px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [1].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">虽然主要功能是提供内容，但HTTP的完整实现还包括从客户端接收内容的方式。此功能用于提交Web表单，包括上传文件。许多通用Web服务器还支持使用Active Server Pages（ASP），PHP或其他脚本语言的服务器端脚本。这意味着Web服务器的行为可以在单独的文件中脚本化，而实际的服务器软件保持不变。通常，此函数用于动态生成HTML文档（“即时”），而不是返回静态文档。前者主要用于从数据库检索或修改信息。后者通常快得多，并且更容易被缓存，但不能提供动态内容。</span></div></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Web服务器不仅用于为万维网服务。它们也可以被嵌入到诸如打印机，路由器，网络摄像机等设备中，并且仅服务于本地网络。然后，web服务器可以用作用于监视或管理所讨论的设备的系统的一部分。这通常意味着客户端计算机上不需要安装其他软件，因为只需要一个网络浏览器（现在大多数操作系统都包含在内）。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.1.2. Web服务器工作原理</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">HTTP协议基于TCP协议上，是一个应用层协议，用于用户代理和Web服务器进行通信。Web服务器通常采用一问一答的方式进行工作：</span></div><ol style="margin: 0px; padding: 0px 0px 0px 40px;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">在用户代理上用户发起资源请求，请求内容包括但不限于：指定资源的唯一标识URI,指明动作类型（GET/POST/DELETE/PUT…）</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">用户代理解析用户输入URI并从中获取目标域名，交由DNS服务器解析。如果URI中指定某IP地址，这无需这步。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">如果与服务器的会话还没建立，此时先建立TCP连接，并完成HTTP协商（确定双方均可接受的处理方式，包括协议版本，是否加密，内容格式等等）。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">用户代理把请求内容封装成HTTP数据包向服务器发送。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器接收到资源请求并以之前协商好的方式解包并处理。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: decimal;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器请求的资源封装成HTTP数据包并返回给用户代理。</span></li></ol><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">接下来重点说说服务器端的工作原理</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:597px;height:387px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [2].png" alt=""></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">TCP监听模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器监听某个端口（一般默认是8080端口，用户可以设置其他端口），以建立和用户代理之间的连接。一旦建立连接，用户代理的后续HTTP请求将不用再进入监听模块。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">预处理</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">此处主要做三件事：1. 从TCP报文中获取HTTP请求报文。 2. 根据和用户代理的协商进行解密，解压，安全处理等等。3. 根据服务器自身的配置进行安全处理，建立会话状态等等。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">UR路由</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">解析URL字符串和动作以确定用户代理请求的资源，根据匹配规则（通常根据正则表达式+后缀）路由到静态资源处理模块或动态资源处理模块。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">静态资源处理模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">负责找到静态资源，比如HTML/Javascript/CSS文件/图片/图像，确定内容是字符流或者字节流，并确定对应MIME,比如HTML生成MIME为text/html的字符流，mpeg视频文件生成MIME为video/mpeg的字节流。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">动态资源处理模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">运行业务逻辑处理，动态决定返回的资源内容和类型，内容和类型的处理原则同上。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">后处理</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">根据和用户协商的协议进行加密，压缩，安全处理等等。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">资源输出模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">把处理好的内容和类型封装成HTTP报文，往TCP连接另一头的用户代理发送TCP报文（内容是HTTP报文）。</span></li></ul><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">主流Web服务器</span></div></blockquote><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">包括Apache、IIS 、Nginx，市场占有率如下</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:580px;height:111px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [3].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">还有比较多使用Tomcat，Jetty，WebSphere，WebLogic，Kerstrel等等。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h2 style="padding: 0px; font-size: 21px; margin: 10px 0px;"><span style="font-size: 21px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.2. Web应用程序容器概念与基本原理</span></h2><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.2.1. Web应用程序容器的由来</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Web服务器的出现的标志着WWW时代的带来，世界变得更加平面化。当初尝到甜头的开创者们开始不满足与在互联网上获取静态资源，于是出现了CGI脚本来动态获取资源。再后来网络发展方向也是朝着增强Web服务器动态获取资源的能力前进。以下是代表性的动态技术：</span></div><table style="word-break: break-word; font-size: inherit; padding: 0px; margin: 10px 10px 10px 0px; border-spacing: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; border-collapse: collapse; border: 1px solid silver; display: block; overflow-x: scroll;"><colgroup><col><col><col></colgroup><tbody style="margin: 0px; padding: 0px;"><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">技术名词</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">特点</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">CGI（Common Gateway Interface，公用网关接口）</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">以独立进程运行，可以用多种语言开发，比如C,C++,VB,Perl，灵活但效率低，维护复杂</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">PHP</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器端嵌入HTML脚本，开源，功能强大，扩展性较差</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">JSP</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器端嵌入HTML脚本，跨平台，部署前需编译，主要缺点是编写JSP比较复杂，需熟悉JAVA及相关技术</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">ASP</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">服务器端嵌入HTML脚本，开发简单，功能强大，只能在windows下运行</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr></tbody></table><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">随后Web服务器朝着企业级应用方向发展，快速的业务变化，迫使Web开发人员面对新的挑战：如何快速写出鲁棒，可靠，符合业务需求的程序并顺利部署？解决这个挑战的一个有效的办法是，创造一个Web程序开发框架（含运行环境，比如解释执行JSP,Web API），这个框架解决鲁棒性，可靠性问题，提供快速开发接口。换言之，开发人员只需要专注于实现业务本身，如有更高的需求还可以对框架进行定制和扩展。这个框架的另外一个名字是Web应用程序容器。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.2.2. Web应用程序容器的基本工作原理</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一般情况下Web应用程序容器是以下构成体系：</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:663px;height:464px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [4].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">注：浅蓝色的模块是实现业务程序的主要使用模块。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">相对于Web服务器，该容器新增或强化了以下模块：</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">分配线程池资源</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">容器为每个请求分配一个线程进行处理，通常采取线程池的方式高效理由CPU算资源。</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">封装Request上下文</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一个请求对应一个Request上下文，它主要封装了用户请求的主要构成：URL,HTTP请求头，以及基于请求头构建的Session,Cookie等对象，方便编程使用。</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">封装Response上下文</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一个请求对应一个Response上下文，主要用于向用户代理返回资源。可以在其中写入输出流，或者重定向，或者返回错误码等等。</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">URL路由</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">在容器里，运行开发人员设置不同的路由匹配规则，比如让.HTM返回.HTML,也可以自定义.xyz返回.HTML资源。更加灵活的配置可以参考JAVA MVC或者ASP.NET MVC的配置方案。</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">动态资源处理模块</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">通常在这里具体的容器和开发语言都有自己的高效开发模型，比如JAVA的Servlet,ASP.NET的Web Form,MVC。</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">回收资源</span></li></ul><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">这里会回收刚才的线程资源，为了线程复用，除非服务器空闲一般会将线程返回线程池。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">可以看出,Web容器本身具备了做为一个Web服务器的功能,事实上通常实现Web容器功能的服务器就是一个Web服务器.比如Tomcat , IIS ,Jetty。</span></div><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">主流Web容器</span></div></blockquote><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">包括Tomcat , IIS ,Jetty 。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">还有比较多使用WebSphere，WebLogic等等。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h2 style="padding: 0px; font-size: 21px; margin: 10px 0px;"><span style="font-size: 21px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.3. Web应用程序服务器概念及基本原理</span></h2><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">在Web服务器发展的同一个时期,应用服务器已经存在并发展很长一段时间了。一些公司为Unix开发了Tuxedo（面向事务的中间件）、TopEnd、Encina等产品，这些产品都是从类似IMS和CICS的主机应用管理和监控环境衍生而来的。大部分的这些产品都指定了“封闭的”产品专用通信协议来互连胖客户机(“fat” client)和服务器。在90年代，这些传统的应用服务器产品开始嵌入HTTP通信功能，刚开始要利用网关来实现。不久后它们之间的界线开始变得模糊了。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">同时，web服务器越来越成熟，可以处理更高的负载、更多的并发和拥有更好的特性；应用服务器开始添加越来越多的基于HTTP的通信功能。所有的这些导致了web服务器与应用服务器的界线变得更窄了。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">目前，“应用服务器”和“web服务器”之间的界线已经变得模糊不清了。但是人们还把这两个术语区分开来，作为强调使用。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">当有人说到“web服务器”时，你通常要把它认为是以HTTP为核心、web UI为向导的应用。当有人说到“应用服务器”时，你可能想到“高负载、企业级特性、事务和队列、多通道通信（HTTP和更多的协议）”。但现在提供这些需求的基本上都是同一个产品。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">下图描述一个典型的Web应用服务器的结构图:</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:349px;height:367px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [5].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">从上图中可以看到Web应用服务器包括了Web容器,同时内置了支撑企业应用的事务,安全,集成,通信,高可用等等功能,极大了减少了重复开发量,保障了业务系统快速开发和部署,而它本身也是一个Web服务器。Web应用服务器可以选择使用大厂的WebLogic和WebSphere这种重量级产品外，也可以使用类似与Tomcat、jetty这样的web containner 再加上第三方的框架(spring,hibernate等)来构建自己的Application Server;.NET Core平台下可以选择IIS, Apache,Nginx 与ASP.NET Core构建。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h2 style="padding: 0px; font-size: 21px; margin: 10px 0px;"><span style="font-size: 21px; color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.4. 反向代理概念与基本原理</span></h2><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.4.1. 反向代理基本概念</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">反向代理是代理服务器的一种。它根据客户端的请求，从后端的服务器（如Web服务器）上获取资源，然后再将这些资源返回给客户端。与前向代理不同，前向代理作为一个媒介将互联网上获取的资源返回给相关联的客户端，而反向代理是在服务器端（如Web服务器）作为代理使用，而不是客户端。客户端通过前向代理可以访问很多不同的资源，而反向代理是很多客户端都通过它访问不同后端服务器上的资源，而不需要知道这些后端服务器的存在，而以为所有资源都来自于这个反向代理服务器。</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:509px;height:303px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [6].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-style: italic; margin: 0px; padding: 0px;">互联网中的请求发送给反向代理，反向代理把请求转发到内网中的服务器。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">反向代理的主要作用为：</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">加密和SSL加速</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">负载均衡</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">缓存静态内容</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">压缩</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">减速上传</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">安全防火墙</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">外网发布</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">突破互联网封锁</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">解决跨域问题</span></li></ul><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h3 style="padding: 0px; font-size: 16px; margin: 10px 0px;"><span style="font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.4.2. 反向代理基本工作原理</span></h3><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">一个反向代理服务器的构成和处理过程如下图：</span></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><div style="margin:0px;padding:0px;border:none;width:700px;height:433px;"><img src="/2017/10/26/转载/一文看懂web服务器、应用服务器、web容器、反向代理服务器区别与联系/Image [7].png" alt=""></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-style: italic; margin: 0px; padding: 0px;">左边淡黄色功能模块对外网报文进行处理，右边灰色功能模块针对内网报文进行处理</span></div><ul style="margin: 0px 0px 0px 30px; padding: 0px; word-break: break-all;"><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">TCP监听模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">监听TCP请求，这里的请求是指报文内容是某应用层协议（比如HTTP,FTP,EMAIL等应用层协议）的请求。至于这里是否会单独产生一个线程来开始处理，这个由服务器自己决定，目前最流行的是先入消息队列然后异步处理，这样能极大提高代理的吞吐量和稳定性。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">匹配被代理服务器</span><br><span style="font-size: 14px; color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">代理服务器根据一个表（存放外网url和内网服务器的对应关系，通常需人工进行设置），如果匹配到则继续处理，否则依据外网协议返回错误信息，比如HTTP协议这返回404。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">应用负载均衡策略</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">如果比较大型的互联网应用，为了整体系统稳定性，解决单点问题，需要根据自定义策略合理的转发报文给被代理服务器。简单的策略是哈希分发或者随机分发，一般可以由用户进行配置和选择。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">预处理</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">这里依据协商好的外网应用协议进行解密，安全，会话，解压等处理。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">新生成网络报文</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">这里依据协商好的内网应用协议生成网络报文，这里可能会进行加密，安全，会话，压缩等处理。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">转发给被代理服务器</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">把新生成的网络报文发送给内网服务器（可能是否Web服务器，Ftp服务器，邮件服务器）。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">接受网络报文</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">接受内网服务器反馈的网络报文。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">预处理</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">这里依据协商好的外网应用协议进行加密，安全，会话，压缩等处理。</span></li><li style="margin: 0px 0px 1em; padding: 0px; list-style: disc;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">资源输出模块</span><br><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">这时生成满足外网应用协议要求的报文，并发送到外网连接的另一端（用户代理）。</span></li></ul><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">常用的反向代理服务器</span></div></blockquote><div style="margin: 10px 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word;"><div style="vertical-align: middle; height: auto; margin: auto; background-color: rgb(245, 245, 245); overflow-x: auto; border: 1px solid rgb(204, 204, 204); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; padding: 5px; font-size: 12px; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 12px; background-color: rgb(245, 245, 245); color: rgb(0, 0, 0); font-family: 'Courier New', sans-serif; line-height: 1.5;">它们的名字您一定记得：Ngnix,IIS,Apache。</span></div></div><p style="padding:0px;color:black;font-size:14px;margin:10px auto;text-indent:0px;"></p><h2 style="padding: 0px; font-size: 21px; margin: 10px 0px;"><span style="font-size: 21px; background-color: rgb(255, 255, 255); color: rgb(255, 99, 71); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.5; font-weight: bold;">1.5. 总结</span></h2><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">从概念上讲：Web服务器是提供WWW服务的程序；Web容器是提供给开发者的框架；Web应用程序服务器内容丰富得多，既可用各厂商通常遵循一定的工业标准并自定义扩展功能而成，也可以利用开源组件轻量级拼装打造；反向代理服务器在企业级应用中表现突出，具有解决集中式安全，负载均衡等等优点。如今这四个概念的边界越来模糊，看看这个表就知道了：</span></div><table style="word-break: break-word; font-size: inherit; padding: 0px; margin: 10px 10px 10px 0px; border-spacing: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; border-collapse: collapse; border: 1px solid silver; display: block; overflow-x: scroll;"><colgroup><col><col><col><col><col></colgroup><tbody style="margin: 0px; padding: 0px;"><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">软件名词</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是否Web服务器</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是否Web容器</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是否Web应用服务器</span></td><td align="left" style="margin: 0px; background-color: rgb(241, 241, 241); font-size: 15px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 15px; background-color: rgb(241, 241, 241); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是否能反向代理</span></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">IIS</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Nginx</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Apache</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Tomcat</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Jetty</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">WebSphere</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">WebLogic</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Kerstrel</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-weight: bold; margin: 0px; padding: 0px;">是？</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td></tr><tr style="margin: 0px; padding: 0px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">Http.sys</span></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; color: rgb(51, 51, 51); border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"></td><td align="left" style="margin: 0px; border: 1px solid silver; border-collapse: collapse; padding: 3px; white-space: nowrap;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">是</span></td></tr></tbody></table><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-weight: bold; font-style: italic; margin: 0px; padding: 0px;">关于Kerstrel是否web容器，有两种观点：</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-style: italic; margin: 0px; padding: 0px;">1. 由于Kerstrel不提供编写应用的框架，所以它不是容器；asp.net core才是容器，因为它提供了开发应用的框架并提供web应用（MVC,Web API)运行环境。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-style: italic; margin: 0px; padding: 0px;">2. Kerstrel提供了运行环境。</span></div><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; font-style: italic; margin: 0px; padding: 0px;">非常欢迎大家提出自己的有力观点，帮助我们清晰化这个asp.net core容器概念。</span></div><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">资料引用</span></div></blockquote><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">【1】</span><a href="https://en.wikipedia.org/wiki/Web_server" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;" target="_blank" rel="external">https://en.wikipedia.org/wiki/Web_server</a></div><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">【2】</span><a href="http://www.cnblogs.com/vipyoumay/p/5853694.html" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;" target="_blank" rel="external">http://www.cnblogs.com/vipyoumay/p/5853694.html</a></div><div><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">【3】</span><a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;" target="_blank" rel="external">https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86</a></div></div><blockquote style="margin: 10px 0px; background-color: rgb(255, 244, 204); padding: 12px 15px; border-width: 2px 2px 2px 5px; border-style: solid; border-color: rgb(239, 239, 239) rgb(239, 239, 239) rgb(239, 239, 239) rgb(255, 224, 112); min-height: 35px; position: relative; background-position: initial initial; background-repeat: initial initial;"><div style="padding: 0px; font-size: 14px; margin: 10px auto; text-indent: 0px;"><span style="font-size: 14px; background-color: rgb(255, 244, 204); color: black; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em;">作者：帅虫哥 出处：</span> <a href="http://www.cnblogs.com/vipyoumay/p/7455431.html" style="margin: 0px; padding: 0px; outline: none; font-size: 14px; background-color: rgb(255, 244, 204); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.6em; color: black; text-decoration: underline;" target="_blank" rel="external">http://www.cnblogs.com/vipyoumay/p/7455431.html</a></div></blockquote></div><div style="display: block; margin: 0px; padding: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">以上内容有任何错误或不准确的地方请大家指正，不喜勿喷！本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。如果觉得还有帮助的话，可以点一下右下角的【推荐】，希望能够持续的为大家带来好的技术文章！想跟我一起进步么？那就【关注】我吧。</span></div><div style="margin:0px;padding:0px;clear:both;"></div><div style="margin: 20px 0px 0px; padding: 0px;"><div style="margin: 0px 0px 10px; padding: 0px;"><span style="font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">分类:</span> <a href="http://www.cnblogs.com/vipyoumay/category/842989.html" style="outline: none; margin: 2px 5px 0px; padding: 3px 14px; height: 20px; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; background-color: rgb(231, 231, 231); font-size: 14px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 20px; color: rgb(102, 102, 102); text-decoration: none; background-position: initial initial; background-repeat: initial initial;" target="_blank">Net Core</a></div><div style="margin: 0px; padding: 0px; font-size: 9pt;"><span style="font-size: 9pt; background-color: rgb(255, 255, 255); color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">标签:</span> <a href="http://www.cnblogs.com/vipyoumay/tag/asp.net%20core%20%E5%AE%B9%E5%99%A8/" style="outline: none; margin: 2px 5px 0px; padding: 3px 14px; height: 20px; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; background-color: rgb(231, 231, 231); font-size: 9pt; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 20px; color: rgb(102, 102, 102); text-decoration: none; background-position: initial initial; background-repeat: initial initial;" target="_blank" rel="external">asp.net core 容器</a><span style="font-size: 9pt; background-color: rgb(255, 255, 255); color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">,</span> <a href="http://www.cnblogs.com/vipyoumay/tag/web%E6%9C%8D%E5%8A%A1%E5%99%A8/" style="outline: none; margin: 2px 5px 0px; padding: 3px 14px; height: 20px; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; background-color: rgb(231, 231, 231); font-size: 9pt; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 20px; color: rgb(102, 102, 102); text-decoration: none; background-position: initial initial; background-repeat: initial initial;" target="_blank" rel="external">web服务器</a></div><div style="margin: 0px; padding: 0px;"><div style="margin: 10px 0px; padding: 10px 0px; border: 1px dashed silver; font-size: 12px; width: 320px; text-align: center;"><a href="#" style="border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; outline: none; margin: 0px; box-shadow: rgba(0, 0, 0, 0.498039) 0px 1px 3px; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">好文要顶</a> <a href="#" style="border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; outline: none; margin: 0px; box-shadow: rgba(0, 0, 0, 0.498039) 0px 1px 3px; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">关注我</a> <a href="#" style="border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; outline: none; margin: 0px; box-shadow: rgba(0, 0, 0, 0.498039) 0px 1px 3px; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">收藏该文</a> <a href="#" style="outline: none; margin: 0px; box-shadow: none; background-image: none; cursor: pointer; display: inline-block; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; text-shadow: none; vertical-align: middle; padding: 3px 2px; border: none; font-size: 12px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: rgb(255, 255, 255); font-weight: bold; text-decoration: none; background-position: initial initial; background-repeat: initial initial;" title="分享至新浪微博"></a> <a href="#" style="outline: none; margin: 0px; box-shadow: none; background-image: none; cursor: pointer; display: inline-block; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; text-shadow: none; vertical-align: middle; padding: 3px 2px; border: none; font-size: 12px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: rgb(255, 255, 255); font-weight: bold; text-decoration: none; background-position: initial initial; background-repeat: initial initial;" title="分享至微信"></a></div><div style="margin: 0px 0px 10px; padding: 0px; float: left; width: 280px; font-size: 12px;"><div style="margin: 0px; padding: 0px; float: left;"><a href="http://home.cnblogs.com/u/vipyoumay/" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 18px; color: black; text-decoration: underline;" target="_blank"></a><div style="margin: 0px; padding: 0px; float: left;"><div><a href="http://home.cnblogs.com/u/vipyoumay/" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 18px; color: black; text-decoration: underline;" target="_blank" rel="external">行动派Xdpie</a></div><div><a href="http://home.cnblogs.com/u/vipyoumay/followees" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 18px; color: black; text-decoration: underline;" target="_blank" rel="external">关注 - 2</a></div><div><a href="http://home.cnblogs.com/u/vipyoumay/followers" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 18px; color: black; text-decoration: underline;" target="_blank" rel="external">粉丝 - 176</a></div></div></div><div style="margin:0px;padding:0px;clear:both;"></div><div style="margin:0px;padding:0px;"></div><div style="margin: 0px; padding: 0px;"><a href="#" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;">+加关注</a></div></div><div style="margin: 10px 30px 10px 0px; padding: 0px; float: right; font-size: 12px; width: 125px; text-align: center;"><div style="margin: 2px 0px 0px; padding: 5px 0px 0px; float: left; width: 46px; height: 52px; background-image: url(http://static.cnblogs.com/images/upup.gif); text-align: center; cursor: pointer; background-position: initial initial; background-repeat: no-repeat no-repeat;"><span style="margin: 0px; padding: 0px; font-size: 14px; color: rgb(7, 93, 179); font-family: Verdana; line-height: 1.5em;">45</span></div><div style="text-align: center; padding: 5px 0px 0px; margin: 2px 0px 0px 20px; height: 52px; background-image: url(http://static.cnblogs.com/images/downdown.gif); cursor: pointer; width: 46px; float: right; background-position: initial initial; background-repeat: no-repeat no-repeat;"><span style="margin: 0px; padding: 0px; font-size: 14px; color: rgb(7, 93, 179); font-family: Verdana; line-height: 1.5em;">0</span></div><div style="margin:0px;padding:0px;clear:both;"></div><div style="margin: 5px 0px 0px; padding: 0px; font-size: 12px;"></div></div></div><div style="margin:0px;padding:0px;clear:both;"></div><div style="margin: 0px; padding: 0px; font-size: 12px;"><div><a href="http://www.cnblogs.com/vipyoumay/p/7420436.html" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: none;" target="_blank" rel="external">«</a> <span style="font-size: 12px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">上一篇：</span><a href="http://www.cnblogs.com/vipyoumay/p/7420436.html" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;" title="发布于2017-08-24 11:35" target="_blank" rel="external">10分钟学会在windows/Linux下设置ASP.Net Core开发环境并部署应用</a></div><div><a href="http://www.cnblogs.com/vipyoumay/p/7474435.html" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: none;" target="_blank" rel="external">»</a> <span style="font-size: 12px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">下一篇：</span><a href="http://www.cnblogs.com/vipyoumay/p/7474435.html" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; background-color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: black; text-decoration: underline;" title="发布于2017-09-04 17:17" target="_blank" rel="external">Tensorflow开发环境配置及其基本概念</a></div></div></div></div><div style="text-align: left; margin: 5px 20px 0px 0px; padding: 0px 20px 35px 0px; background-image: none; float: left; width: 100%; clear: both; font-size: 12px; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">posted @</span> <span style="margin: 0px; padding: 0px; font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">2017-08-31 11:32</span> <a href="http://www.cnblogs.com/vipyoumay/" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: rgb(102, 102, 102); text-decoration: none;" target="_blank" rel="external">行动派Xdpie</a> <span style="font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">阅读(</span><span style="margin: 0px; padding: 0px; font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">3749</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">) 评论(</span><span style="margin: 0px; padding: 0px; font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">13</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8;">)</span> <a href="https://i.cnblogs.com/EditPosts.aspx?postid=7455431" rel="external" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: rgb(102, 102, 102); text-decoration: none;" target="_blank">编辑</a> <a href="http://www.cnblogs.com/vipyoumay/p/7455431.html#" style="margin: 0px; padding: 0px; outline: none; font-size: 12px; font-family: 微软雅黑, 宋体, 黑体, Arial; line-height: 1.8; color: rgb(102, 102, 102); text-decoration: none;" target="_blank" rel="external">收藏</a></div></div></div></div></div></div></div><div><br></div></span><br></div> </p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网络基础 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo常用命令]]></title>
      <url>/2017/10/25/hexo/</url>
      <content type="html"><![CDATA[<p>hexo常用命令.</p>
<a id="more"></a>
<p>hexo<br>npm install hexo -g #安装<br>npm update hexo -g #升级<br>hexo init #初始化<br>简写<br>hexo n “我的博客” == hexo new “我的博客” #新建文章<br>hexo p == hexo publish<br>hexo g == hexo generate#生成<br>hexo s == hexo server #启动服务预览<br>hexo d == hexo deploy#部署</p>
<p>服务器<br>hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br>hexo server -s #静态模式<br>hexo server -p 5000 #更改端口<br>hexo server -i 192.168.1.1 #自定义 IP</p>
<p>hexo clean #清除缓存 网页正常情况下可以忽略此条命令<br>hexo g #生成静态网页<br>hexo d #开始部署</p>
<p>监视文件变动<br>hexo generate #使用 Hexo 生成静态文件快速而且简单<br>hexo generate –watch #监视文件变动</p>
<p>完成后部署<br>两个命令的作用是相同的<br>hexo generate –deploy<br>hexo deploy –generate<br>hexo deploy -g<br>hexo server -g</p>
<p>草稿<br>hexo publish [layout] <title></title></p>
<p>模版<br>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #将.deploy目录部署到GitHub</p>
<p>hexo new [layout] <title><br>hexo new photo “My Gallery”<br>hexo new “Hello World” –lang tw</title></p>
<p>变量    描述<br>layout    布局<br>title    标题<br>date    文件建立日期<br>title: 使用Hexo搭建个人博客<br>layout: post<br>date: 2014-03-03 19:07:43<br>comments: true<br>categories: Blog<br>tags: [Hexo]<br>keywords: Hexo, Blog<br>description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。<br>模版（Scaffold）<br>hexo new photo “My Gallery”</p>
<p>变量    描述<br>layout    布局<br>title    标题<br>date    文件建立日期<br>设置文章摘要<br>以上是文章摘要 <!--more--> 以下是余下全文<br>写作<br>hexo new page <title><br>hexo new post <title></title></title></p>
<p>变量    描述<br>:title    标题<br>:year    建立的年份（4 位数）<br>:month    建立的月份（2 位数）<br>:i_month    建立的月份（去掉开头的零）<br>:day    建立的日期（2 位数）<br>:i_day    建立的日期（去掉开头的零）<br>推送到服务器上<br>hexo n #写文章<br>hexo g #生成<br>hexo d #部署 #可与hexo g合并为 hexo d -g</p>
<p>报错<br>1.找不到git部署<br>ERROR Deployer not found: git<br>解决方法</p>
<p>npm install hexo-deployer-git –save</p>
<p>3.部署类型设置git<br>hexo 3.0 部署类型不再是github，_config.yml 中修改</p>
<h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-http-hexo-io-docs-deployment-html"><a href="#Docs-http-hexo-io-docs-deployment-html" class="headerlink" title="Docs: http://hexo.io/docs/deployment.html"></a>Docs: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">http://hexo.io/docs/deployment.html</a></h2><p>deploy:<br>  type: git<br>  repository: git@<strong><em>.github.com:</em></strong>/<em>*</em>.github.io.git<br>  branch: master</p>
<ol>
<li>xcodebuild<br>xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance</li>
</ol>
<p>npm install bcrypt</p>
<ol>
<li>RSS不显示<br>安装RSS插件</li>
</ol>
<p>npm install hexo-generator-feed –save</p>
<p>开启RSS功能</p>
<p>编辑hexo/_config.yml，添加如下代码：</p>
<p>rss: /atom.xml #rss地址  默认即可<br>开启评论</p>
<p>1.我使用多说代替自带的评论，在多说 网站注册 &gt; 后台管理 &gt; 添加新站点 &gt; 工具 === 复制通用代码 里面有 short_name</p>
<p>在根目录 _config.yml 添加一行 disqus_shortname: jslite 是在多说注册时产生的<br>复制到 themes\landscape\layout_partial\article.ejs<br>把<br>&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname){ %&gt;</p>
<p><section id="comments"></section></p>
<p><div id="disqus_thread"><br>  <noscript>Please enable JavaScript to view the <a href="//disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><br></div><br><br>&lt;% } %&gt;<br>改为</p>
<p>&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname){ %&gt;<br>  <section id="comments"><br>    <!-- 多说评论框 start --><br>    <div class="ds-thread" data-thread-key="<%= post.layout %>-<%= post.slug %>" data-title="<%= post.title %>" data-url="<%= page.permalink %>"></div><br>    <!-- 多说评论框 end --><br>    <!-- 多说公共JS代码 start (一个网页只需插入一次) --><br>    <script type="text/javascript"><br>    var duoshuoQuery = {short_name:’&lt;%= config.disqus_shortname %&gt;’};<br>      (function() {<br>        var ds = document.createElement(‘script’);<br>        ds.type = ‘text/javascript’;ds.async = true;<br>        ds.src = (document.location.protocol == ‘https:’ ? ‘https:’ : ‘http:’) + ‘//static.duoshuo.com/embed.js’;<br>        ds.charset = ‘UTF-8’;<br>        (document.getElementsByTagName(‘head’)[0]<br>         || document.getElementsByTagName(‘body’)[0]).appendChild(ds);<br>      })();<br>      </script><br>    <!-- 多说公共JS代码 end --><br>  </section><br>&lt;% } %&gt;</p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[互联网分层架构，为啥要前后端分离]]></title>
      <url>/2017/10/25/%E8%BD%AC%E8%BD%BD/%E4%BA%92%E8%81%94%E7%BD%91%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%EF%BC%8C%E4%B8%BA%E5%95%A5%E8%A6%81%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>互联网分层架构，为啥要前后端分离？</p>
<a id="more"></a>
<p>转载自： <a href="http://mp.weixin.qq.com/s/Nhyo969WnEwyCWpr34ECcA" target="_blank" rel="external">http://mp.weixin.qq.com/s/Nhyo969WnEwyCWpr34ECcA</a>.</p>
<p><html></html></p>
<p><head><br>  <title>Evernote Export</title><br>  <basefont face="微软雅黑" size="2"><br>  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"><br>  <meta name="exporter-version" content="Evernote Windows/305825 (zh-CN, DDL); Windows/10.0.15063 (Win64);"><br>  <style><br>    body, td {<br>      font-family: 微软雅黑;<br>      font-size: 10pt;<br>    }<br>  </style><br></head></p>
<p><body><br><a name="11159"></a></body></p>
<p><div><br><span><div><br></div><div style="font-size: 16px; display: inline-block;"><div style="background-color: rgb(255, 255, 255);"><div style="background-color: rgb(255, 255, 255); font-size: 16px; word-wrap: break-word;"><div style="background-color: rgb(255, 255, 255);"><h2 style="margin: 0px 0px 14px; padding: 0px 0px 10px; font-size: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(231, 231, 235);"><span style="font-size: 24px; line-height: 1.4; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-weight: 400;">互联网分层架构，为啥要前后端分离？</span></h2><div style="margin: 0px 0px 18px; padding: 0px; font-size: 0px; position: relative; z-index: 1;"><span style="font-size: 15px; margin: 0px 8px 10px 0px; display: inline-block; vertical-align: middle; padding: 1px 0.5em; border: 1px solid rgb(158, 158, 158); border-top-left-radius: 20%; border-top-right-radius: 50%; border-bottom-right-radius: 20%; border-bottom-left-radius: 50%; max-width: none; line-height: 1.1; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(140, 140, 140);">原创</span> <span style="font-size: 16px; line-height: 20px; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-style: normal; color: rgb(140, 140, 140); display: inline-block; margin: 0px 8px 10px 0px; max-width: none; padding: 0px; vertical-align: middle;">2017-10-25</span> <span style="font-size: 16px; line-height: 20px; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-style: normal; color: rgb(140, 140, 140); display: inline-block; margin: 0px 8px 10px 0px; max-width: none; padding: 0px; vertical-align: middle;">58沈剑</span> <a href="http://mp.weixin.qq.com/s/Nhyo969WnEwyCWpr34ECcA##" style="margin: 0px 8px 10px 0px; padding: 0px; vertical-align: middle; font-size: 16px; max-width: none; display: inline-block; line-height: 20px; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(96, 127, 166); text-decoration: none;" target="_blank" rel="external">架构师之路</a></div><div style="margin: 0px; padding: 0px; overflow: hidden; min-height: 350px; position: relative;"><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><div><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/Image.png" alt=""></div><div><span style="color: rgb(62, 62, 62); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 14px; letter-spacing: 1px; line-height: 1.5em;">通用业务服务化之后，系统的典型后端结构如上：</span></div></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">web-server</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">通过RPC接口，从通用业务服务获取数据</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">biz-service</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">通过RPC接口，从多个基础数据service获取数据</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">基础数据service</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">通过DAO，从独立db/cache获取数据</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">db/cache</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">存储数据</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">随着时间的推移，系统架构并不会一成不变，业务越来越复杂，改版越来越多，此时web-server层虽然使用了MVC架构，但以下诸多</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">痛点</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">是否似曾相识？</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">产品追求绚丽的效果，并对设备兼容性要求高</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，这些需求不断折磨着使用MVC的Java工程师们（本文以Java举例）</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">不管是PC，还是手机H5，还是APP，应用</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">前端展现的变化频率远远大于后端逻辑的变化频率</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">（感谢那些喜欢做改版的产品经理），改velocity模版并不是Java工程师喜欢和擅长的工作</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">此时，为了缓解这些问题，一般会</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">成立单独的前端FE部门</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，来负责交互与展现的研发，其职责与后端Java工程师分离开，但痛点依然没有完全解决：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">一点点展现的改动，需要Java工程师们</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">重新编译，打包，上线，重启tomcat</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，效率极低</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">原先Java工程师负责所有MVC的研发工作，现在分为Java和FE两块，需要等前端和后端都完成研发，才能一起调试整体效果，不仅</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">增加了沟通成本</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，任何一块出问题，都可能导致项目延期</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">更具体的，看一个这样的例子，最开始产品</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">只有PC版本</span><span style="font-size: 14px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，此时其系统分层架构如下：</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/7.png" alt=""></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">客户端，web-server，service，非常清晰。</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">随着业务的发展，</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">产品需要新增Mobile版本</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，Mobile版本和PC版本大部分业务逻辑都一样，唯一的</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">区别是屏幕比较小</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">信息展现的条数会比较少，即调用service服务时，<span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">传入的参数会不一样</span></span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">产品功能会比较少，大部分service的调用一样，<span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">少数service不需要调用</span></span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">展现，交互会有所区别</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">由于工期较紧，Mobile版本的web-server一般怎么来呢？</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/2.png" alt=""></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">没错，</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">把PC版本的工程拷贝一份，然后再做小量的修改</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">service调用的参数有些变化</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">大部分service的调用一样，少数service的调用去掉</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">修改展现，交互相关的代码</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">业务继续发展，</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">产品又需要新增APP版本</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，APP版本和Mobile版本业务逻辑完全相同，唯一的区别是：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">Mobile版本返回html格式的数据，</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">APP版本返回json格式的数据</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，然后进行本地渲染</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">由于工期较紧，APP版本的web-server一般怎么来呢？</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/3.png" alt=""></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">没错，</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">把Mobile版本的工程拷贝一份，然后再做小量的修改</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">把拼装html数据的代码，修改为拼装json数据</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><br style="margin:0px;padding:0px;max-width:100%;box-sizing:border-box;word-wrap:break-word;"></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">这么迭代，演化，发展，架构会变成这个样子：</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/4.png" alt=""></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">端</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，是PC，Mobile，APP</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">web-server接入</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，是PC站，M站，APP站</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">服务层</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，通用的业务服务，以及基础数据服务</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">这个架构图中的依赖关系是不是</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">看上去很别扭</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">？</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">端到web-server之间连接关系很清晰</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">web-server与service之间的连接关系变成了蜘蛛网</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">PC/H5/APP的web-server层大部分业务是相同的，只有少数的逻辑/展现/交互不一样：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">一旦一个服务RPC接口有稍许变化，所有web-server系统都需要升级修改</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">web-server之间存在大量代码拷贝</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">一旦拷贝代码，出现一个bug，多个子系统都需要升级修改</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">如何让数据的获取更加高效快捷，如何让数据生产与数据展现解耦分离呢？</span></strong></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">前后端分离</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">的分层抽象势在必行。</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/5.png" alt=""></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">通过前后端分离分层抽象：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">站点展示层</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，node.js，负责数据的展现与交互，<span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">由FE维护</span></span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">站点数据层</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">，web-server，负责业务逻辑与json数据接口的提供，<span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">由Java工程师维护</span></span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">这样的好处是：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">复杂的业务逻辑与数据生成，只有在站点数据层处写了一次，没有代码拷贝</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">底层service接口发生变化，只有站点数据层一处需要升级修改</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">底层service如果有bug，只有站点数据层一处需要升级修改</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">站点展现层可以根据产品的不同形态，传入不同的参数，调用不同的站点数据层接口</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">除此之外：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">产品追求绚丽的效果，并对设备兼容性要求高，不再困扰Java工程师，由更专业的FE对接</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">一点点展现的改动，不再需要Java工程师们重新编译，打包，上线，重启tomcat</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">约定好json接口后，Java和FE分开开发，FE可以用mock的接口自测，不再等待一起联调</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"><img src="/2017/10/25/转载/互联网分层架构，为啥要前后端分离？/6.png" alt=""></span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">结论</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">：</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">当</span></strong><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">业务越来越复杂，端上的产品越来越多，展现层的变化越来越快越来越多，站点层存在大量代码拷贝，数据获取复杂性成为通用痛点</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold; box-sizing: border-box; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">的时候</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">，就应该进行</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">前后端分离</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">分层抽象，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">最后再强调两点：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; list-style-type: disc;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">是否需要前后端分离，和业务复杂性，以及业务发展阶段有关，不可一概而论</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">本文强调的前后端分离的思路，实际情况下有多种实现方式，文章并没有透彻展开实现细节</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);"> </span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><strong style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); font-weight: bold;">任何脱离业务的架构设计，都是耍流氓</span></strong><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">。</span></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><div><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">思路比细节重要</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">。</span></div></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><br style="margin:0px;padding:0px;max-width:100%;box-sizing:border-box;word-wrap:break-word;"></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word; white-space: normal;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">阅读前序文章，“</span><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(255, 76, 0);">分层架构设计</span><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">”的背景与来龙去脉更加清晰：</span></div><ul style="margin: 0px; padding: 0px 0px 0px 30px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">《</span><a href="http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651960455&amp;idx=1&amp;sn=02cb2345ae9862edad11113726c49512&amp;chksm=bd2d015b8a5a884d9619cdf7ae0dc1a480979a95abb24bac2645cecd54caec4c6bdb3aa617d7&amp;scene=21#wechat_redirect" style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(96, 127, 166); text-decoration: none;" target="_blank">互联网分层架构的本质</a><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">》</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">《</span><a href="http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651960468&amp;idx=1&amp;sn=82bb21ff787f2ae3db2630e0823f3062&amp;chksm=bd2d01488a5a885eb4bbd2470cbd5f2d92a473a45cac02a5d68f55b5d8f72cd8cbb38b18962a&amp;scene=21#wechat_redirect" style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(96, 127, 166); text-decoration: none;" target="_blank">分层架构设计，基础数据服务分层</a><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">》</span></li><li style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">《</span><a href="http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651960482&amp;idx=1&amp;sn=feb27bdd202093a5e4747f7c043415d1&amp;chksm=bd2d017e8a5a8868888e553a30559cb9eefa93e0a1da557342e1a13127ca67143ea87b721363&amp;scene=21#wechat_redirect" style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(96, 127, 166); text-decoration: none;" target="_blank">分层架构设计，通用业务服务分层</a><span style="font-size: 14px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62); box-sizing: border-box; letter-spacing: 1px; margin: 0px; max-width: 100%; padding: 0px; word-wrap: break-word;">》</span></li></ul><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><br style="margin:0px;padding:0px;max-width:100%;box-sizing:border-box;word-wrap:break-word;"></div><div style="margin: 0px; padding: 0px; clear: both; min-height: 1em; max-width: 100%; box-sizing: border-box; word-wrap: break-word;"><span style="margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word; font-size: 14px; letter-spacing: 1px; line-height: 1.5em; background-color: rgb(255, 255, 255); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; color: rgb(62, 62, 62);">若有收获，随手帮转哟。</span></div></div></div></div></div></div><div><br></div></span><br></div> </p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[书单]]></title>
      <url>/2017/10/25/%E4%B9%A6%E5%8D%95/%E4%B9%A6%E5%8D%95/</url>
      <content type="html"><![CDATA[<p>自己想看的书单.</p>
<a id="more"></a>
<h2 id="想读"><a href="#想读" class="headerlink" title="想读"></a>想读</h2><div style="display:block;float:left;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>


<div style="display:block;float:left;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>


<div style="display:block;float:left;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>


<div style="display:block;float:left;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>

<div style="display:block;float:left;margin-left:10px;width:320px;"><br><img src="/2017/10/25/书单/书单/性能之巅.jpg" alt=""><br>性能之巅:洞悉系统、企业与云计算<br></div>]]></content>
      
        <categories>
            
            <category> 书单 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书单 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git出现 fatal:Pathspec 'xxx' is in submodule]]></title>
      <url>/2017/10/25/git/Git%E5%87%BA%E7%8E%B0%20fatal%20Pathspec%20'xxx'%20is%20in%20submodule/</url>
      <content type="html"><![CDATA[<p>Git出现 fatal:Pathspec ‘xxx’ is in submodule.</p>
<a id="more"></a>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>Git出现 fatal:Pathspec ‘xxx’ is in submodule</p>
<p>使用<code>git status</code>查看，没有任何提交，后手动删除重新copy了文件，再次使用git status：</p>
<p><code>modified:   themes/maupassant (modified content)</code></p>
<p><code>git add</code>后只增加了文件夹，但是没有文件。手动Add:<br><code>git add themes/maupasnt/_config.yml</code></p>
<p>报出错误信息：<br><code>fatal: Pathspec &#39;xxx&#39; is in submodule</code></p>
<p>解决方案:</p>
<p>所以使用下面命令：<br>git rm -rf –cached themes/maupasnt/_config.yml<br>git add themes/maupasnt/*</p>
<p>再次使用git status查看发现文件已经成功添加： </p>
<h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div></pre></td><td class="code"><pre><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes not staged <span class="keyword">for</span> commit:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</div><div class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</div><div class="line">  (commit or discard the untracked or modified content <span class="keyword">in</span> submodules)</div><div class="line"></div><div class="line">        modified:   themes/maupassant (modified content)</div><div class="line"></div><div class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git add -A</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes not staged <span class="keyword">for</span> commit:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</div><div class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</div><div class="line">  (commit or discard the untracked or modified content <span class="keyword">in</span> submodules)</div><div class="line"></div><div class="line">        modified:   themes/maupassant (modified content)</div><div class="line"></div><div class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git add themes/maupasnt/_config.yml</div><div class="line">fatal: Pathspec <span class="string">'themes/maupassant/_config.yml'</span> is <span class="keyword">in</span> submodule <span class="string">'themes/maupassant'</span></div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git rm -rf --cached themes/maupassant/</div><div class="line">rm <span class="string">'themes/maupassant'</span></div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git add themes/maupassant/*</div><div class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> themes/maupassant/<span class="built_in">source</span>/js/donate.js.</div><div class="line">The file will have its original line endings <span class="keyword">in</span> your working directory.</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes to be committed:</div><div class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</div><div class="line"></div><div class="line">        deleted:    themes/maupassant</div><div class="line">        new file:   themes/maupassant/LICENSE</div><div class="line">        new file:   themes/maupassant/README.md</div><div class="line">        new file:   themes/maupassant/_config.yml</div><div class="line">        new file:   themes/maupassant/languages/de-DE.yml</div><div class="line">        new file:   themes/maupassant/languages/en.yml</div><div class="line">        new file:   themes/maupassant/languages/es-ES.yml</div><div class="line">        new file:   themes/maupassant/languages/fr-FR.yml</div><div class="line">        new file:   themes/maupassant/languages/ko.yml</div><div class="line">        new file:   themes/maupassant/languages/ru.yml</div><div class="line">        new file:   themes/maupassant/languages/zh-CN.yml</div><div class="line">        new file:   themes/maupassant/languages/zh-TW.yml</div><div class="line">        new file:   themes/maupassant/layout/_partial/after_footer.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/comments.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/footer.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/head.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/helpers.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/mathjax.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/mathjax2.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/paginator.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/post_nav.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/tag.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/totop.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/category.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/links.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/recent_comments.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/recent_posts.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/search.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/tag.jade</div><div class="line">        new file:   themes/maupassant/layout/archive.jade</div><div class="line">        new file:   themes/maupassant/layout/base-without-sidebar.jade</div><div class="line">        new file:   themes/maupassant/layout/base.jade</div><div class="line">        new file:   themes/maupassant/layout/index.jade</div><div class="line">        new file:   themes/maupassant/layout/page.jade</div><div class="line">        new file:   themes/maupassant/layout/post.jade</div><div class="line">        new file:   themes/maupassant/layout/single-column.jade</div><div class="line">        new file:   themes/maupassant/layout/timeline.jade</div><div class="line">        new file:   themes/maupassant/package.json</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/default.css</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/donate.css</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/style.scss</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/donate/index.html</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/AliPayQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/BTCQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/WeChatQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/alipay.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/bitcoin.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/github.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/like.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/paypal.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/wechat.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/codeblock-resizer.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/donate.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/fancybox.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/gitment.browser.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/search.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/share.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/smartresize.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/totop.js</div><div class="line"></div><div class="line">Untracked files:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</div><div class="line"></div><div class="line">        themes/maupassant/.travis.yml</div><div class="line"></div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git add -A</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes to be committed:</div><div class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</div><div class="line"></div><div class="line">        deleted:    themes/maupassant</div><div class="line">        new file:   themes/maupassant/.travis.yml</div><div class="line">        new file:   themes/maupassant/LICENSE</div><div class="line">        new file:   themes/maupassant/README.md</div><div class="line">        new file:   themes/maupassant/_config.yml</div><div class="line">        new file:   themes/maupassant/languages/de-DE.yml</div><div class="line">        new file:   themes/maupassant/languages/en.yml</div><div class="line">        new file:   themes/maupassant/languages/es-ES.yml</div><div class="line">        new file:   themes/maupassant/languages/fr-FR.yml</div><div class="line">        new file:   themes/maupassant/languages/ko.yml</div><div class="line">        new file:   themes/maupassant/languages/ru.yml</div><div class="line">        new file:   themes/maupassant/languages/zh-CN.yml</div><div class="line">        new file:   themes/maupassant/languages/zh-TW.yml</div><div class="line">        new file:   themes/maupassant/layout/_partial/after_footer.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/comments.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/footer.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/head.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/helpers.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/mathjax.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/mathjax2.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/paginator.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/post_nav.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/tag.jade</div><div class="line">        new file:   themes/maupassant/layout/_partial/totop.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/category.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/links.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/recent_comments.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/recent_posts.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/search.jade</div><div class="line">        new file:   themes/maupassant/layout/_widget/tag.jade</div><div class="line">        new file:   themes/maupassant/layout/archive.jade</div><div class="line">        new file:   themes/maupassant/layout/base-without-sidebar.jade</div><div class="line">        new file:   themes/maupassant/layout/base.jade</div><div class="line">        new file:   themes/maupassant/layout/index.jade</div><div class="line">        new file:   themes/maupassant/layout/page.jade</div><div class="line">        new file:   themes/maupassant/layout/post.jade</div><div class="line">        new file:   themes/maupassant/layout/single-column.jade</div><div class="line">        new file:   themes/maupassant/layout/timeline.jade</div><div class="line">        new file:   themes/maupassant/package.json</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/default.css</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/donate.css</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/css/style.scss</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/donate/index.html</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/AliPayQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/BTCQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/WeChatQR.png</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/alipay.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/bitcoin.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/github.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/like.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/paypal.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/img/wechat.svg</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/codeblock-resizer.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/donate.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/fancybox.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/gitment.browser.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/search.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/share.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/smartresize.js</div><div class="line">        new file:   themes/maupassant/<span class="built_in">source</span>/js/totop.js</div><div class="line"></div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git commit -m <span class="string">"update blog"</span></div><div class="line">[master 30da1c0] update blog</div><div class="line"> 60 files changed, 8611 insertions(+), 1 deletion(-)</div><div class="line"> delete mode 160000 themes/maupassant</div><div class="line"> create mode 100644 themes/maupassant/.travis.yml</div><div class="line"> create mode 100644 themes/maupassant/LICENSE</div><div class="line"> create mode 100644 themes/maupassant/README.md</div><div class="line"> create mode 100644 themes/maupassant/_config.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/de-DE.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/en.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/es-ES.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/fr-FR.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/ko.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/ru.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/zh-CN.yml</div><div class="line"> create mode 100644 themes/maupassant/languages/zh-TW.yml</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/after_footer.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/comments.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/footer.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/head.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/helpers.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/mathjax.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/mathjax2.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/paginator.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/post_nav.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/tag.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_partial/totop.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/category.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/links.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/recent_comments.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/recent_posts.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/search.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/_widget/tag.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/archive.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/base-without-sidebar.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/base.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/index.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/page.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/post.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/single-column.jade</div><div class="line"> create mode 100644 themes/maupassant/layout/timeline.jade</div><div class="line"> create mode 100644 themes/maupassant/package.json</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/css/default.css</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/css/donate.css</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/css/style.scss</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/donate/index.html</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/AliPayQR.png</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/BTCQR.png</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/WeChatQR.png</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/alipay.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/bitcoin.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/github.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/like.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/paypal.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/img/wechat.svg</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/codeblock-resizer.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/donate.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/fancybox.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/gitment.browser.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/search.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/share.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/smartresize.js</div><div class="line"> create mode 100644 themes/maupassant/<span class="built_in">source</span>/js/totop.js</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git satus</div><div class="line">git: <span class="string">'satus'</span> is not a git <span class="built_in">command</span>. See <span class="string">'git --help'</span>.</div><div class="line"></div><div class="line">The most similar <span class="built_in">command</span> is</div><div class="line">        status</div><div class="line"></div><div class="line">Administrator@MicroWin10-1512 MINGW64 /d/hexo (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">nothing to commit, working tree clean</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 遇到的问题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ES6]]></title>
      <url>/2017/10/25/ES6/</url>
      <content type="html"><![CDATA[<p>记录一些ES6新特性.</p>
<a id="more"></a>
<h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><h2 id="let-const"><a href="#let-const" class="headerlink" title="let const"></a>let const</h2><ul>
<li>块级作用域</li>
<li>不可重复声明</li>
<li>const 声明时就要赋值</li>
</ul>
<h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><ul>
<li>数组解构赋值</li>
<li>对象解构赋值</li>
<li>字符串解构赋值</li>
<li>布尔值解构赋值</li>
<li>函数参数解构赋值</li>
<li>数值解构赋值</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a, b, rest</div><div class="line">    [a, b] = [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line">    <span class="comment">// 1 2</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a, b, rest</div><div class="line">    [a, b, ...rest] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div><div class="line">    <span class="comment">// 1 2 [ 3, 4, 5, 6 ]</span></div><div class="line">    <span class="built_in">console</span>.log(a, b, rest)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a, b</div><div class="line">    (&#123; a, b &#125; = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span> &#125;)</div><div class="line">    <span class="comment">// 1 2</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a, b, c, rest</div><div class="line">    [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line">    <span class="comment">// 1 2 undefined</span></div><div class="line">    <span class="built_in">console</span>.log(a, b, c)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a = <span class="number">1</span></div><div class="line">    <span class="keyword">let</span> b = <span class="number">2</span>;</div><div class="line">    [a, b] = [b, a]</div><div class="line">    <span class="comment">// 2 1</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> a, b</div><div class="line">    [a, b] = f()</div><div class="line">    <span class="comment">// 1 2</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>, <span class="number">2</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> a, b, c</div><div class="line">    [a, , , b] = f()</div><div class="line">    <span class="comment">// 1 4</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> a, b, c</div><div class="line">    [a, , ...b] = f()</div><div class="line">    <span class="comment">// 1 [3,4,5]</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> o = &#123; <span class="attr">p</span>: <span class="number">42</span>, <span class="attr">q</span>: <span class="literal">true</span> &#125;</div><div class="line">    <span class="keyword">let</span> &#123; p, q &#125; = o</div><div class="line">    <span class="comment">// 42 true</span></div><div class="line">    <span class="built_in">console</span>.log(p, q)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> &#123; a = <span class="number">10</span>, b = <span class="number">5</span> &#125; = &#123; <span class="attr">a</span>: <span class="number">3</span> &#125;</div><div class="line">    <span class="comment">// 3 5</span></div><div class="line">    <span class="built_in">console</span>.log(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> metaData = &#123;</div><div class="line">        title: <span class="string">'abc'</span>,</div><div class="line">        test: [&#123;</div><div class="line">            title: <span class="string">'test'</span>,</div><div class="line">            desc: <span class="string">'description'</span></div><div class="line">        &#125;]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> &#123; <span class="attr">title</span>: esTitle, <span class="attr">test</span>: [&#123; <span class="attr">title</span>: cnTitle &#125;] &#125; = metaData</div><div class="line">    <span class="comment">// abc test</span></div><div class="line">    <span class="built_in">console</span>.log(esTitle, cnTitle)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="正则扩展"><a href="#正则扩展" class="headerlink" title="正则扩展"></a>正则扩展</h2><ul>
<li>构造函数的变化</li>
<li>正则方法的扩展</li>
<li>u修饰符</li>
<li>y修饰符</li>
<li>s修饰符</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> regex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'xyz'</span>, <span class="string">'i'</span>)</div><div class="line">    <span class="keyword">let</span> regex2 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/xyz/i</span>)</div><div class="line">    <span class="comment">// true true</span></div><div class="line">    <span class="built_in">console</span>.log(regex.test(<span class="string">'xyz123'</span>), regex2.test(<span class="string">'xyz123'</span>))</div><div class="line"></div><div class="line">    <span class="comment">// 第二个修饰符会覆盖第一个参数的修饰符</span></div><div class="line">    <span class="keyword">let</span> regex3 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/xyz/ig</span>, <span class="string">'i'</span>)</div><div class="line">    <span class="comment">// flags获取修饰符， 打印 i</span></div><div class="line">    <span class="built_in">console</span>.log(regex3.flags)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;   </div><div class="line">    <span class="keyword">let</span> s = <span class="string">'bbb_bb_b'</span></div><div class="line">    <span class="keyword">let</span> a1 = <span class="regexp">/b+/g</span></div><div class="line">    <span class="keyword">let</span> a2 = <span class="regexp">/b+/y</span></div><div class="line">    <span class="comment">// [ 'bbb', index: 0, input: 'bbb_bb_b' ] [ 'bbb', index: 0, input: 'bbb_bb_b' ]</span></div><div class="line">    <span class="built_in">console</span>.log(a1.exec(s), a2.exec(s))</div><div class="line">    <span class="comment">// [ 'bb', index: 4, input: 'bbb_bb_b' ] null</span></div><div class="line">    <span class="built_in">console</span>.log(a1.exec(s), a2.exec(s))</div><div class="line">    <span class="comment">// g y修饰符不同，都是全局匹配</span></div><div class="line">    <span class="comment">// g：从上一次匹配位置开始寻找，不限定下一个字符，这题匹配到的是 bb 满足</span></div><div class="line">    <span class="comment">// y：限定匹配结果从下一个字符开始，这题第二次匹配到的是 _ 不满足所以null </span></div><div class="line"></div><div class="line">    <span class="comment">// sticky 判断是不是开启 y 模式</span></div><div class="line">    <span class="comment">// false true</span></div><div class="line">    <span class="built_in">console</span>.log(a1.sticky, a2.sticky)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;   </div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'u-1'</span>,/^\uD83D/.test(<span class="string">'\uD83D\uDC2A'</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'u-2'</span>,/^\uD83D/u.test(<span class="string">'\uD83D\uDC2A'</span>))</div><div class="line"></div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/\u&#123;61&#125;/</span>.test(<span class="string">'a'</span>))</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/\u&#123;61&#125;/u</span>.test(<span class="string">'a'</span>))</div><div class="line">    <span class="comment">// �</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`\u&#123;20BB7&#125;`</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">let</span> s = <span class="string">`\u&#123;20BB7&#125;`</span></div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'u'</span>,/^.$/.test(s))</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'u-2'</span>,/^.$/u.test(s))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="数值扩展"><a href="#数值扩展" class="headerlink" title="数值扩展"></a>数值扩展</h2><ul>
<li>Number.isFinite</li>
<li>Number.isNaN</li>
<li>Number.isInteger</li>
<li>Number.MAX_SAFE_INTEGER</li>
<li>Number.MIN_SAFE_INTEGER</li>
<li>Number.isSafeInteger</li>
<li>Math.trunc</li>
<li>Math.sign</li>
<li>Math.cbrt</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 二进制</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">0b111110111</span>)</div><div class="line">    <span class="comment">// 八进制</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">0o767</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isFinite(<span class="number">15</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isFinite(<span class="literal">NaN</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isFinite(<span class="string">'ture'</span> / <span class="number">0</span>))</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="literal">NaN</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="number">0</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isInteger(<span class="number">25</span>))</div><div class="line">    <span class="comment">// true，25.0 等于 25</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isInteger(<span class="number">25.0</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isInteger(<span class="number">25.1</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isInteger(<span class="string">'25'</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 9007199254740991  2^53</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.MAX_SAFE_INTEGER)</div><div class="line">    <span class="comment">// -9007199254740991</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.MIN_SAFE_INTEGER)</div><div class="line">    <span class="comment">// true, 是否在安全区间</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isSafeInteger(<span class="number">10</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Number</span>.isSafeInteger(<span class="number">9007199254740992</span>))</div><div class="line">    <span class="comment">// 9007199254740992 2^53</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">53</span>))</div><div class="line"></div><div class="line">    <span class="comment">// 4 取整</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.trunc(<span class="number">4.1</span>))</div><div class="line">    <span class="comment">// 4</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.trunc(<span class="number">4.9</span>))</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// -1</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">-5</span>))</div><div class="line">    <span class="comment">// 0</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">0</span>))</div><div class="line">    <span class="comment">// 1</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">5</span>))</div><div class="line">    <span class="comment">// 1</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="string">'50'</span>))</div><div class="line">    <span class="comment">// NaN</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="string">'foo'</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// -1</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.cbrt(<span class="number">-1</span>))</div><div class="line">    <span class="comment">// 2</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.cbrt(<span class="number">8</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="数组扩展"><a href="#数组扩展" class="headerlink" title="数组扩展"></a>数组扩展</h2><ul>
<li>Array.from</li>
<li>Array.of</li>
<li>Array.fill</li>
<li>Array.values</li>
<li>Array.entries</li>
<li>Array.copyWithin</li>
<li>Array.find</li>
<li>Array.findIndex</li>
<li>Array.includes</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>es6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>es7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>es8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="keyword">let</span> p = <span class="built_in">document</span>.querySelectorAll(<span class="string">'p'</span>)</span></div><div class="line"><span class="javascript">        <span class="keyword">let</span> arr = <span class="built_in">Array</span>.from(p)</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="comment">// es6 es7 es8</span></span></div><div class="line"><span class="javascript">        arr.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(item.textContent)</span></div><div class="line"><span class="undefined">        &#125;)</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="comment">// [2,6,10]</span></span></div><div class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="built_in">Array</span>.from([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>], <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> item * <span class="number">2</span></span></div><div class="line"><span class="undefined">        &#125;))</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = <span class="built_in">Array</span>.of(<span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>)</div><div class="line">    <span class="comment">// [3,4,7,9,11]</span></div><div class="line">    <span class="built_in">console</span>.log(arr)</div><div class="line"></div><div class="line">    <span class="keyword">let</span> arr2 = <span class="built_in">Array</span>.of()</div><div class="line">    <span class="comment">// []</span></div><div class="line">    <span class="built_in">console</span>.log(arr2)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// [ 7, 7, 7 ]，替换为7</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>, <span class="string">'a'</span>, <span class="literal">undefined</span>].fill(<span class="number">7</span>))</div><div class="line">    <span class="comment">// [ 'a', 7, 7 ], 从位置1开始到3 替换为7</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>].fill(<span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 0 1 2</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">of</span> [<span class="string">'1'</span>, <span class="string">'c'</span>, <span class="string">'ks'</span>].keys()) &#123;</div><div class="line">        <span class="built_in">console</span>.log(index)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 有兼容问题</span></div><div class="line">    <span class="comment">// 1 c ks</span></div><div class="line">    <span class="comment">/* for (let value of ['1', 'c', 'ks'].values()) &#123;</span></div><div class="line"><span class="comment">        console.log(value)</span></div><div class="line"><span class="comment">    &#125; */</span></div><div class="line"></div><div class="line">    <span class="comment">// 键值</span></div><div class="line">    <span class="comment">// 0 1</span></div><div class="line">    <span class="comment">// 1 c</span></div><div class="line">    <span class="comment">// 2 ks</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> [index, value] <span class="keyword">of</span> [<span class="string">'1'</span>, <span class="string">'c'</span>, <span class="string">'ks'</span>].entries()) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'444'</span>, index, value)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// [ 4, 2, 3, 4, 5 ]</span></div><div class="line">    <span class="comment">// 从0位置开始替换，读取第三个数，截至位置是四（不包含四位置，取四之前）</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].copyWithin(<span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 4, find只找第一个元素</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>].find(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> item &gt; <span class="number">3</span></div><div class="line">    &#125;))</div><div class="line"></div><div class="line">    <span class="comment">// 3， 位置是3</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>].findIndex(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> item &gt; <span class="number">3</span></div><div class="line">    &#125;))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>,<span class="number">2</span>,<span class="literal">NaN</span>].includes(<span class="number">1</span>))</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log([<span class="number">1</span>,<span class="number">2</span>,<span class="literal">NaN</span>].includes(<span class="literal">NaN</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="函数扩展"><a href="#函数扩展" class="headerlink" title="函数扩展"></a>函数扩展</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 函数参数默认值</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">x = <span class="number">1</span>, y</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(x, y)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 1 undefined</span></div><div class="line">    <span class="comment">// test()</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> x = <span class="string">'test'</span></div><div class="line"></div><div class="line">    <span class="comment">// 作用于的问题，取的括号的x</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params">x, y = x</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(x, y)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// kill kill</span></div><div class="line">    test2(<span class="string">'kill'</span>)</div><div class="line"></div><div class="line">    <span class="comment">// undefined undefined</span></div><div class="line">    test2()</div><div class="line"></div><div class="line">    <span class="comment">// -------------------</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test3</span>(<span class="params">y = x</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(x, y)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// test test, 取的是外面定义的</span></div><div class="line">    test3()</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// rest 参数就是一系列参数转成数组，类似arguments</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test3</span>(<span class="params">...arg</span>) </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> v <span class="keyword">of</span> arg) &#123;</div><div class="line">            <span class="built_in">console</span>.log(v)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 3 4 5</span></div><div class="line">    test3(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 扩展运算符</span></div><div class="line">    <span class="comment">// 1 2 4</span></div><div class="line">    <span class="built_in">console</span>.log(...[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>])</div><div class="line">    <span class="comment">// a 1 2 4</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'a'</span>, ...[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>])</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arrow = <span class="function"><span class="params">v</span> =&gt;</span> v * <span class="number">2</span></div><div class="line">    <span class="comment">// 6</span></div><div class="line">    <span class="built_in">console</span>.log(arrow(<span class="number">3</span>))</div><div class="line">    <span class="comment">/* 等价于 let arrow = function (v) &#123; return v * 2 &#125; */</span></div><div class="line"></div><div class="line">    <span class="keyword">let</span> arrow2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="number">5</span></div><div class="line">    <span class="comment">// 5</span></div><div class="line">    <span class="built_in">console</span>.log(arrow2())</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 伪调用，提高性能</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">tail</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(x)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fx</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> tail(x)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 123</span></div><div class="line">    fx(<span class="number">123</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="对象扩展"><a href="#对象扩展" class="headerlink" title="对象扩展"></a>对象扩展</h2><ul>
<li>Object.is</li>
<li>Object.assign</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> o = <span class="number">1</span></div><div class="line">    <span class="keyword">let</span> k = <span class="number">2</span></div><div class="line"></div><div class="line">    <span class="keyword">let</span> es5 = &#123;</div><div class="line">        o: o,</div><div class="line">        k: k</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> es6 = &#123;</div><div class="line">        o,</div><div class="line">        k</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// &#123; o: 1, k: 2 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(es5)</div><div class="line">    <span class="comment">// &#123; o: 1, k: 2 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(es6)</div><div class="line"></div><div class="line">    <span class="keyword">let</span> es5_method = &#123;</div><div class="line">        hello: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> es6_method = &#123;</div><div class="line">        hello() &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// hello</span></div><div class="line">    es5_method.hello()</div><div class="line">    <span class="comment">// hello</span></div><div class="line">    es6_method.hello()</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 属性表达式</span></div><div class="line">    <span class="keyword">let</span> a = <span class="string">'b'</span></div><div class="line">    <span class="keyword">let</span> es5_obj = &#123;</div><div class="line">        a: <span class="string">'c'</span>,</div><div class="line">        b: <span class="string">'c'</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// [a]等于上面得 b</span></div><div class="line">    <span class="keyword">let</span> es6_obj = &#123;</div><div class="line">        [a]: <span class="string">'c'</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// &#123; a: 'c', b: 'c' &#125; &#123; b: 'c' &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(es5_obj, es6_obj)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// Object.is 功能等同于 ===</span></div><div class="line">    <span class="comment">// true true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(<span class="string">'abc'</span>, <span class="string">'abc'</span>), <span class="string">'abc'</span> === <span class="string">'abc'</span>)</div><div class="line">    <span class="comment">// false false, 引用类型</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.is([], []), [] === [])</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 浅拷贝, 只能拷贝自身得属性, 不可枚举得不可拷贝</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.assign(&#123; <span class="attr">a</span>: <span class="string">'a'</span> &#125;, &#123; <span class="attr">b</span>: <span class="string">'b'</span> &#125;))</div><div class="line">    </div><div class="line">    <span class="keyword">let</span> test = &#123; <span class="attr">k</span>: <span class="number">123</span>, <span class="attr">o</span>: <span class="number">456</span> &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> [key, value] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(test)) &#123;</div><div class="line">        <span class="built_in">console</span>.log([key, value])</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// ["k", 123]</span></div><div class="line">    <span class="comment">// ["o", 456]</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// test kill &#123;c:'dd',d:'cc'&#125;</span></div><div class="line">    <span class="keyword">let</span> &#123; a, b, ...c &#125; = &#123; <span class="attr">a</span>: <span class="string">'test'</span>, <span class="attr">b</span>: <span class="string">'kill'</span>, <span class="attr">c</span>: <span class="string">'ddd'</span>, <span class="attr">d</span>: <span class="string">'ccc'</span> &#125;</div><div class="line">    <span class="built_in">console</span>.log(a, b, c)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 提供一个独一无二的值, Sybmbol 声明的永远不相同</span></div><div class="line">    <span class="keyword">let</span> a1 = <span class="built_in">Symbol</span>()</div><div class="line">    <span class="keyword">let</span> a2 = <span class="built_in">Symbol</span>()</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(a1 == a2)</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(a1 === a2)</div><div class="line"></div><div class="line">    <span class="comment">// 如果注册过就拿到那个值, 没有则生成</span></div><div class="line">    <span class="keyword">let</span> a3 = <span class="built_in">Symbol</span>.for(<span class="string">'a3'</span>)</div><div class="line">    <span class="keyword">let</span> a4 = <span class="built_in">Symbol</span>.for(<span class="string">'a3'</span>)</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(a3 === a4)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a1 = <span class="built_in">Symbol</span>.for(<span class="string">'abc'</span>)</div><div class="line">    <span class="keyword">let</span> obj = &#123;</div><div class="line">        [a1]: <span class="string">'123'</span>,</div><div class="line">        <span class="string">'abc'</span>: <span class="number">345</span>,</div><div class="line">        <span class="string">'c'</span>: <span class="number">456</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// &#123;abc: 345, c: 456, Symbol(abc): "123"&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(obj)</div><div class="line"></div><div class="line">    <span class="comment">// abc 345</span></div><div class="line">    <span class="comment">// c 456</span></div><div class="line">    <span class="comment">// 拿不到 Symbol(abc)</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> [key, value] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(obj)) &#123;</div><div class="line">        <span class="built_in">console</span>.log(key, value)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 123, 只获取 Symbol属性</span></div><div class="line">    <span class="built_in">Object</span>.getOwnPropertySymbols(obj).forEach(<span class="function"><span class="params">ietm</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(obj[item])</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment">// abc c Symbol(abc), 拿到包括 Symbol的属性</span></div><div class="line">    <span class="built_in">Reflect</span>.ownKeys(obj).forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(item, item[obj])</div><div class="line">    &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="set-map-数据结构"><a href="#set-map-数据结构" class="headerlink" title="set map 数据结构"></a>set map 数据结构</h2><ul>
<li>Set</li>
<li>WeakSet</li>
<li>Map</li>
<li>WeakMap</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Set</span>()</div><div class="line">    list.add(<span class="number">5</span>)</div><div class="line">    list.add(<span class="number">7</span>)</div><div class="line">    <span class="comment">// 2</span></div><div class="line">    <span class="built_in">console</span>.log(list.size)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line">    <span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</div><div class="line">    <span class="comment">// 5</span></div><div class="line">    <span class="built_in">console</span>.log(list.size)</div><div class="line">    <span class="comment">// Set &#123; 1, 2, 3, 4, 5 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(list)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Set</span>()</div><div class="line">    list.add(<span class="number">1</span>)</div><div class="line">    list.add(<span class="number">2</span>)</div><div class="line">    list.add(<span class="number">1</span>)</div><div class="line">    <span class="comment">// Set &#123; 1, 2 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(list)</div><div class="line"></div><div class="line">    <span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'4'</span>]</div><div class="line">    <span class="keyword">let</span> list2 = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</div><div class="line">    <span class="comment">// Set &#123; 1, 2, 3, 4, '4' &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(list2)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = [<span class="string">'add'</span>, <span class="string">'delete'</span>, <span class="string">'clear'</span>, <span class="string">'has'</span>]</div><div class="line">    <span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(list.has(<span class="string">'add'</span>))</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(list.delete(<span class="string">'add'</span>))</div><div class="line">    <span class="comment">// false</span></div><div class="line">    <span class="built_in">console</span>.log(list.has(<span class="string">'add'</span>))</div><div class="line"></div><div class="line">    <span class="comment">// list.clear()</span></div><div class="line">    <span class="comment">// Set &#123;&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(list)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = [<span class="string">'add1'</span>, <span class="string">'delete1'</span>, <span class="string">'clear1'</span>, <span class="string">'has1'</span>]</div><div class="line">    <span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</div><div class="line">    <span class="comment">// add1 delete1 clear1 has1</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> list.keys()) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'keys'</span>, key)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// add1 delete1 clear1 has1</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> list.values()) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'value'</span>, value)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// add1 delete1 clear1 has1</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> list) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'value'</span>, value)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// ['add1',['add1'] </span></div><div class="line">    <span class="comment">// ['delete1','delete1'] </span></div><div class="line">    <span class="comment">// ['clear1', 'clear1'] </span></div><div class="line">    <span class="comment">// ['has1','has1']</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> list.entries()) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'value'</span>, value)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// add1 delete1 clear1 has1</span></div><div class="line">    list.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(item)</div><div class="line">    &#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// WeakSet, 跟Set支持的数据类型不一样, 只能是对象不能是数值 布尔字符串等</span></div><div class="line">    <span class="comment">// 弱引用, 再weakset添加的对象只是引用, 而且不会考虑是不是已经被垃圾回收的对象</span></div><div class="line">    <span class="comment">// 不能遍历 没有clear 没有set属性, 其他的同 Set</span></div><div class="line">    <span class="keyword">let</span> weakList = <span class="keyword">new</span> <span class="built_in">WeakSet</span>()</div><div class="line">    <span class="keyword">let</span> arg = &#123;&#125;</div><div class="line">    weakList.add(arg)</div><div class="line">    <span class="comment">// WeakSet &#123;&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(weakList)</div><div class="line">    <span class="comment">// Invalid value used in weak set</span></div><div class="line">    <span class="comment">// weakList.add(1)</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// Map 的key 可以是任何数据类型</span></div><div class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>()</div><div class="line">    <span class="keyword">let</span> arr = [<span class="string">'123'</span>]</div><div class="line">    map.set(arr, <span class="number">456</span>)</div><div class="line">    <span class="comment">// Map &#123; [ '123' ] =&gt; 456 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map)</div><div class="line">    <span class="comment">// 456</span></div><div class="line">    <span class="built_in">console</span>.log(map.get(arr))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 其他方法同 Set</span></div><div class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'a'</span>, <span class="number">123</span>], [<span class="string">'b'</span>, <span class="number">456</span>]])</div><div class="line">    <span class="comment">// Map &#123; 'a' =&gt; 123, 'b' =&gt; 456 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map)</div><div class="line"></div><div class="line">    <span class="comment">// 2</span></div><div class="line">    <span class="built_in">console</span>.log(map.size)</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(map.delete(<span class="string">'a'</span>))</div><div class="line">    <span class="comment">// Map &#123; 'b' =&gt; 456 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map)</div><div class="line"></div><div class="line">    <span class="comment">// Map &#123;&#125;</span></div><div class="line">    map.clear()</div><div class="line">    <span class="built_in">console</span>.log(map)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 同 Set 同 weakSet的区别</span></div><div class="line">    <span class="keyword">let</span> weakmap = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</div><div class="line">    <span class="keyword">let</span> o = &#123;&#125;</div><div class="line">    weakmap.set(o, <span class="number">123</span>)</div><div class="line">    <span class="comment">// 123</span></div><div class="line">    <span class="built_in">console</span>.log(weakmap.get(o))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="map-set-与数组-Object对比"><a href="#map-set-与数组-Object对比" class="headerlink" title="map set 与数组 Object对比"></a>map set 与数组 Object对比</h2><p><code>建议 能使用map 不使用数组, 数据要求比较高, 保证数据存储唯一 优先set 放弃obj array</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line">&#123;   </div><div class="line">    <span class="comment">// 建议 能使用map 不使用数组, 数据要求比较高, 保证数据存储唯一 优先set 放弃obj array</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>()</div><div class="line">    <span class="keyword">let</span> array = []</div><div class="line">    <span class="comment">// 增</span></div><div class="line">    map.set(<span class="string">'t'</span>, <span class="number">1</span>)</div><div class="line">    array.push(&#123; <span class="attr">t</span>: <span class="number">1</span> &#125;)</div><div class="line"></div><div class="line">    <span class="comment">// Map &#123; 't' =&gt; 1 &#125; </span></div><div class="line">    <span class="comment">// [ &#123; t: 1 &#125; ]</span></div><div class="line">    <span class="built_in">console</span>.info(map, array)</div><div class="line"></div><div class="line">    <span class="comment">// 查</span></div><div class="line">    <span class="keyword">let</span> map_exist = map.has(<span class="string">'t'</span>)</div><div class="line">    <span class="keyword">let</span> array_exist = array.find(<span class="function"><span class="params">item</span> =&gt;</span> item.t)</div><div class="line">    <span class="comment">// true &#123; t: 1 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map_exist, array_exist)</div><div class="line"></div><div class="line">    <span class="comment">// 改</span></div><div class="line">    map.set(<span class="string">'t'</span>, <span class="number">2</span>)</div><div class="line">    array.forEach(<span class="function"><span class="params">item</span> =&gt;</span> item.t ? item.t = <span class="number">2</span> : <span class="string">''</span>)</div><div class="line">    <span class="comment">// Map &#123; 't' =&gt; 2 &#125; [ &#123; t: 2 &#125; ]</span></div><div class="line">    <span class="built_in">console</span>.log(map, array)</div><div class="line"></div><div class="line">    <span class="comment">// 删</span></div><div class="line">    map.delete(<span class="string">'t'</span>)</div><div class="line">    <span class="keyword">let</span> index = array.findIndex(<span class="function"><span class="params">item</span> =&gt;</span> item.t)</div><div class="line">    array.splice(index, <span class="number">1</span>)</div><div class="line">    <span class="comment">// Map &#123;&#125; []</span></div><div class="line">    <span class="built_in">console</span>.log(map, array)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>()</div><div class="line">    <span class="keyword">let</span> array = []</div><div class="line"></div><div class="line">    <span class="comment">// 增</span></div><div class="line">    set.add(&#123; <span class="attr">t</span>: <span class="number">1</span> &#125;)</div><div class="line">    array.push(&#123; <span class="attr">t</span>: <span class="number">1</span> &#125;)</div><div class="line">    <span class="comment">// Set &#123; &#123; t: 1 &#125; &#125; [ &#123; t: 1 &#125; ]</span></div><div class="line">    <span class="built_in">console</span>.log(set, array)</div><div class="line"></div><div class="line">    <span class="comment">// 查</span></div><div class="line">    <span class="keyword">let</span> set_exist = set.has(&#123; <span class="attr">t</span>: <span class="number">1</span> &#125;)</div><div class="line">    <span class="keyword">let</span> array_exist = array.find(<span class="function"><span class="params">item</span> =&gt;</span> item.t)</div><div class="line">    <span class="comment">// false &#123; t: 1 &#125;, 为false是因为has找的是对象的引用, 需要先保存下对象 </span></div><div class="line">    <span class="built_in">console</span>.log(set_exist, array_exist)</div><div class="line"></div><div class="line">    <span class="comment">// 改</span></div><div class="line">    set.forEach(<span class="function"><span class="params">item</span> =&gt;</span> item.t ? item.t = <span class="number">2</span> : <span class="string">''</span>)</div><div class="line">    array.forEach(<span class="function"><span class="params">item</span> =&gt;</span> item.t ? item.t = <span class="number">2</span> : <span class="string">''</span>)</div><div class="line">    <span class="comment">// Set &#123; &#123; t: 2 &#125; &#125; [ &#123; t: 2 &#125; ]</span></div><div class="line">    <span class="built_in">console</span>.log(set, array)</div><div class="line"></div><div class="line">    <span class="comment">// 删</span></div><div class="line">    set.forEach(<span class="function"><span class="params">item</span> =&gt;</span> item.t ? set.delete(item) : <span class="string">''</span>)</div><div class="line">    <span class="keyword">let</span> index = array.findIndex(<span class="function"><span class="params">item</span> =&gt;</span> item.t)</div><div class="line">    array.splice(index, <span class="number">1</span>)</div><div class="line">    <span class="comment">// Set &#123;&#125; []</span></div><div class="line">    <span class="built_in">console</span>.log(set, array)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// map, set, object 对比</span></div><div class="line">    <span class="keyword">let</span> item = &#123; <span class="attr">t</span>: <span class="number">1</span> &#125;</div><div class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>()</div><div class="line">    <span class="keyword">let</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>()</div><div class="line">    <span class="keyword">let</span> obj = &#123;&#125;</div><div class="line"></div><div class="line">    <span class="comment">// 增</span></div><div class="line">    map.set(<span class="string">'t'</span>, <span class="number">1</span>)</div><div class="line">    set.add(item)</div><div class="line">    obj[<span class="string">'t'</span>] = <span class="number">1</span></div><div class="line">    <span class="comment">// Map &#123; 't' =&gt; 1 &#125; Set &#123; &#123; t: 1 &#125; &#125; &#123; t: 1 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map, set, obj)</div><div class="line"></div><div class="line">    <span class="comment">// 查</span></div><div class="line">    <span class="comment">// &#123; map_exist: true, set_exist: true, obj_exist: true &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(&#123;</div><div class="line">        map_exist: map.has(<span class="string">'t'</span>),</div><div class="line">        set_exist: set.has(item),</div><div class="line">        obj_exist: <span class="string">'t'</span> <span class="keyword">in</span> obj</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment">// 改</span></div><div class="line">    map.set(<span class="string">'t'</span>, <span class="number">2</span>)</div><div class="line">    item.t = <span class="number">2</span></div><div class="line">    obj[<span class="string">'t'</span>] = <span class="number">2</span></div><div class="line">    <span class="comment">// Map &#123; 't' =&gt; 2 &#125; Set &#123; &#123; t: 2 &#125; &#125; &#123; t: 2 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map, set, obj)</div><div class="line"></div><div class="line">    <span class="comment">// 删</span></div><div class="line">    map.delete(<span class="string">'t'</span>)</div><div class="line">    set.delete(item)</div><div class="line">    <span class="keyword">delete</span> obj[<span class="string">'t'</span>]</div><div class="line">    <span class="comment">// Map &#123;&#125; Set &#123;&#125; &#123;&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map, set, obj)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Proxy-和-Reflect"><a href="#Proxy-和-Reflect" class="headerlink" title="Proxy 和 Reflect"></a>Proxy 和 Reflect</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 供应商</span></div><div class="line">    <span class="keyword">let</span> obj = &#123;</div><div class="line">        time: <span class="string">'2017-10-24'</span>,</div><div class="line">        name: <span class="string">'net'</span>,</div><div class="line">        _r: <span class="number">123</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 代理商</span></div><div class="line">    <span class="keyword">let</span> monitor = <span class="keyword">new</span> <span class="built_in">Proxy</span>(obj, &#123;</div><div class="line">        <span class="comment">// 拦截(代理)对象属性的读取</span></div><div class="line">        get(target, key) &#123;</div><div class="line">            <span class="keyword">return</span> target[key].replace(<span class="string">'2017'</span>, <span class="string">'2018'</span>)</div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// 拦截对象设置属性</span></div><div class="line">        set(target, key, value) &#123;</div><div class="line">            <span class="keyword">if</span> (key === <span class="string">'name'</span>) &#123;</div><div class="line">                <span class="keyword">return</span> target[key] = value</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> target[key]</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// 拦截 key in object 操作</span></div><div class="line">        has(target, key) &#123;</div><div class="line">            <span class="keyword">if</span> (key === <span class="string">'name'</span>) &#123;</div><div class="line">                <span class="keyword">return</span> target[key]</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        deleteProperty(target, key) &#123;</div><div class="line">            <span class="keyword">if</span> (key.indexOf(<span class="string">'_'</span>) &gt; <span class="number">-1</span>) &#123;</div><div class="line">                <span class="keyword">delete</span> target[key]</div><div class="line">                <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> target[key]</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// 拦截 Object.keys,Object.getOwnPropertySymbols,Object.getOwnPropertyNames</span></div><div class="line">        ownKeys(target) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="built_in">Object</span>.keys(target).filter(<span class="function"><span class="params">item</span> =&gt;</span> item != <span class="string">'time'</span>)</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;)</div><div class="line">    <span class="comment">// 2017-10-24</span></div><div class="line">    <span class="built_in">console</span>.log(monitor.time)</div><div class="line"></div><div class="line">    monitor.time = <span class="string">'2011'</span></div><div class="line">    monitor.name = <span class="string">'net2'</span></div><div class="line">    <span class="comment">// 2018-10-24 net2, 时间未修改成功</span></div><div class="line">    <span class="built_in">console</span>.log(monitor.time, monitor.name)</div><div class="line">    <span class="comment">// true false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'name'</span> <span class="keyword">in</span> monitor, <span class="string">'time'</span> <span class="keyword">in</span> monitor)</div><div class="line"></div><div class="line">    <span class="comment">/* delete monitor.time</span></div><div class="line"><span class="comment">    console.log(monitor.time)</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">    delete monitor._r</span></div><div class="line"><span class="comment">    console.log(monitor._r) */</span></div><div class="line"></div><div class="line">    <span class="comment">// ['name', '_r' ]</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(monitor))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// Reflect 其他的同 Proxy</span></div><div class="line">    <span class="keyword">let</span> obj = &#123;</div><div class="line">        time: <span class="string">'2017-10-24'</span>,</div><div class="line">        name: <span class="string">'net'</span>,</div><div class="line">        _r: <span class="number">123</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//2017-10-24</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Reflect</span>.get(obj, <span class="string">'time'</span>))</div><div class="line"></div><div class="line">    <span class="built_in">Reflect</span>.set(obj, <span class="string">'name'</span>, <span class="string">'haha'</span>)</div><div class="line">    <span class="comment">// &#123; time: '2017-10-24', name: 'haha', _r: 123 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(obj)</div><div class="line">    <span class="comment">// true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">Reflect</span>.has(obj, <span class="string">'name'</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 业务解耦校验模块</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">validator</span>(<span class="params">target, validator</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Proxy</span>(target, &#123;</div><div class="line">            _validator: validator,</div><div class="line">            set(target, key, value, proxy) &#123;</div><div class="line">                <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</div><div class="line">                    <span class="keyword">let</span> va = <span class="keyword">this</span>._validator[key]</div><div class="line">                    <span class="keyword">if</span> (!!va(value)) &#123;</div><div class="line">                        <span class="keyword">return</span> <span class="built_in">Reflect</span>.set(target, key, value, proxy)</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="keyword">throw</span> <span class="built_in">Error</span>(<span class="string">`不能设置<span class="subst">$&#123;key&#125;</span>到<span class="subst">$&#123;value&#125;</span>`</span>)</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="built_in">Error</span>(<span class="string">`<span class="subst">$&#123;key&#125;</span> 不存在`</span>)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">const</span> personValidators = &#123;</div><div class="line">        name(val) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">typeof</span> val === <span class="string">'string'</span></div><div class="line">        &#125;,</div><div class="line">        age(val) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">typeof</span> val === <span class="string">'number'</span> &amp;&amp; val &gt; <span class="number">18</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name, age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">            <span class="keyword">this</span>.age = age</div><div class="line">            <span class="keyword">return</span> validator(<span class="keyword">this</span>, personValidators)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">const</span> person = <span class="keyword">new</span> Person(<span class="string">'leilei'</span>, <span class="number">20</span>)</div><div class="line">    <span class="comment">// Person &#123; name: 'leilei', age: 20 &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(person)</div><div class="line"></div><div class="line">    <span class="comment">// Error: 不能设置name 48</span></div><div class="line">    <span class="comment">// person.name = 48</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><ul>
<li>基本定义</li>
<li>继承</li>
<li>getter setter</li>
<li>静态方法</li>
<li>静态属性</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 基本定义和生成实例</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'zhangsan') &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> v_parent = <span class="keyword">new</span> Parent(<span class="string">'V'</span>)</div><div class="line">    <span class="comment">// Parent &#123; name: 'V' &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(v_parent)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 继承</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'zhangsan', age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">            <span class="keyword">this</span>.age = <span class="string">'33'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'child') &#123;</div><div class="line">            <span class="comment">// super 一定是第一行, 子类向父类传递参数的过程</span></div><div class="line">            <span class="keyword">super</span>(name)</div><div class="line">            <span class="keyword">this</span>.type = <span class="string">'child'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Child &#123; name: '22', age: '33', type: 'child' &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> Child(<span class="string">'22'</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// getter setter</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'zhangsan', age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">            <span class="keyword">this</span>.age = <span class="string">'33'</span></div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 这里是属性 不是方法</span></div><div class="line">        get longName() &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">'ml'</span> + <span class="keyword">this</span>.name</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        set longName(value) &#123;</div><div class="line">            <span class="keyword">this</span>.name = value</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> v = <span class="keyword">new</span> Parent()</div><div class="line">    <span class="comment">// mlzhangsan</span></div><div class="line">    <span class="built_in">console</span>.log(v.longName)</div><div class="line"></div><div class="line">    v.longName = <span class="string">'hello'</span></div><div class="line">    <span class="comment">// mlhello</span></div><div class="line">    <span class="built_in">console</span>.log(v.longName)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 静态方法</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'zhangsan', age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">            <span class="keyword">this</span>.age = <span class="string">'33'</span></div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 静态 方法</span></div><div class="line">        <span class="keyword">static</span> tell() &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'tell'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// tell</span></div><div class="line">    Parent.tell()</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 静态属性</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</div><div class="line">        <span class="keyword">constructor</span>(name = 'zhangsan', age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name</div><div class="line">            <span class="keyword">this</span>.age = <span class="string">'33'</span></div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 静态 方法</span></div><div class="line">        <span class="keyword">static</span> tell() &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'tell'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 非常简单  静态属性</span></div><div class="line">    Parent.type = <span class="string">'test'</span></div><div class="line">    <span class="built_in">console</span>.log(Parent.type)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><h3 id="什么是异步"><a href="#什么是异步" class="headerlink" title="什么是异步"></a>什么是异步</h3><p>A执行完执行B<br>传统：回调函数、事件触发</p>
<h3 id="Promise的作用"><a href="#Promise的作用" class="headerlink" title="Promise的作用"></a>Promise的作用</h3><p>解决异步操作问题</p>
<h3 id="Promise的基本用法"><a href="#Promise的基本用法" class="headerlink" title="Promise的基本用法"></a>Promise的基本用法</h3><h4 id="传统写法"><a href="#传统写法" class="headerlink" title="传统写法"></a>传统写法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 基本定义</span></div><div class="line">    <span class="keyword">let</span> ajax = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'执行'</span>)</div><div class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            callback &amp;&amp; callback.call()</div><div class="line">        &#125;, <span class="number">1000</span>)</div><div class="line">    &#125;</div><div class="line">    ajax(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'timeout1'</span>)</div><div class="line">    &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="resolve"><a href="#resolve" class="headerlink" title="resolve"></a>resolve</h4><h4 id="reject"><a href="#reject" class="headerlink" title="reject"></a>reject</h4><h4 id="then"><a href="#then" class="headerlink" title="then"></a>then</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> ajax = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'执行3'</span>)</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</div><div class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                resolve()</div><div class="line">            &#125;, <span class="number">1000</span>)</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ajax().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</div><div class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                resolve()</div><div class="line">            &#125;, <span class="number">2000</span>);</div><div class="line">        &#125;)</div><div class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'timeout3'</span>)</div><div class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'catch'</span>)</div><div class="line">    &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all"></a>Promise.all</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 所有图片加载完再添加到页面</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadImg</span>(<span class="params">src</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">            <span class="keyword">let</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>)</div><div class="line">            img.src = src</div><div class="line"></div><div class="line">            img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                resolve(img)</div><div class="line">            &#125;</div><div class="line">            img.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">                reject(err)</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showImgs</span>(<span class="params">imgs</span>) </span>&#123;</div><div class="line">        imgs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">img</span>) </span>&#123;</div><div class="line">            <span class="built_in">document</span>.body.appendChild(img)</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">Promise</span>.all([</div><div class="line">        loadImg(<span class="string">'http://localhost.com/1.jpg'</span>),</div><div class="line">        loadImg(<span class="string">'http://localhost.com/2.jpg'</span>),</div><div class="line">        loadImg(<span class="string">'http://localhost.com/3.jpg'</span>),</div><div class="line">    ]).then(showImgs)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Promise-race"><a href="#Promise-race" class="headerlink" title="Promise.race"></a>Promise.race</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 有一个完成就添加到页面</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadImg</span>(<span class="params">src</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">            <span class="keyword">let</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>)</div><div class="line">            img.src = src</div><div class="line"></div><div class="line">            img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                resolve(img)</div><div class="line">            &#125;</div><div class="line">            img.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">                reject(err)</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showImgs</span>(<span class="params">img</span>)</span>&#123;</div><div class="line">        <span class="keyword">let</span> p = <span class="built_in">document</span>.createElement(<span class="string">'p'</span>)</div><div class="line">        p.appendChild(img)</div><div class="line">        <span class="built_in">document</span>.body.appendChild(p)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">Promise</span>.race([</div><div class="line">        loadImg(<span class="string">'http://localhost.com/1.jpg'</span>),</div><div class="line">        loadImg(<span class="string">'http://localhost.com/2.jpg'</span>),</div><div class="line">        loadImg(<span class="string">'http://localhost.com/3.jpg'</span>),</div><div class="line">    ]).then(showImgs)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="字符串扩展"><a href="#字符串扩展" class="headerlink" title="字符串扩展"></a>字符串扩展</h2><h3 id="Unicode表示法"><a href="#Unicode表示法" class="headerlink" title="Unicode表示法"></a>Unicode表示法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// a a</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'a'</span>, <span class="string">`\u0061`</span>)</div><div class="line">    <span class="comment">// s ₻7, 因为 20BB7 大于 0XFFFF，20BB解析为₻ 最后结果为₻7</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'s'</span>, <span class="string">`\u20BB7`</span>)</div><div class="line">    <span class="comment">// s �</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'s'</span>, <span class="string">`\u&#123;20BB7&#125;`</span>)</div><div class="line">    <span class="keyword">let</span> s = <span class="string">'�'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> s = <span class="string">`\u&#123;20BB7&#125;`</span></div><div class="line">    <span class="comment">// 2, 四字节为1 大于四字节 2</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'length'</span>, s.length)</div><div class="line">    <span class="comment">// �</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'0'</span>, s.charAt(<span class="number">0</span>))</div><div class="line">    <span class="comment">// �</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'0'</span>, s.charAt(<span class="number">1</span>))</div><div class="line">    <span class="comment">// 55362</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'at0'</span>, s.charCodeAt(<span class="number">0</span>))</div><div class="line">    <span class="comment">// 57271</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'at1'</span>, s.charCodeAt(<span class="number">1</span>))</div><div class="line"></div><div class="line">    <span class="comment">// </span></div><div class="line">    <span class="keyword">let</span> s1 = <span class="string">`\u&#123;20BB7&#125;a`</span></div><div class="line">    <span class="comment">// 3</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'length'</span>, s1.length)</div><div class="line">    <span class="comment">// 134071</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'0'</span>, s1.codePointAt(<span class="number">0</span>))</div><div class="line">    <span class="comment">// 20bb7</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'code0'</span>, s1.codePointAt(<span class="number">0</span>).toString(<span class="number">16</span>))</div><div class="line">    <span class="comment">// 57271</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'code0'</span>, s1.codePointAt(<span class="number">1</span>))</div><div class="line">    <span class="comment">// 97</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'code0'</span>, s1.codePointAt(<span class="number">2</span>))</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="comment">// ஷ</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">String</span>.fromCharCode(<span class="string">'0x20bb7'</span>))</div><div class="line">    <span class="comment">// �</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">String</span>.fromCodePoint(<span class="string">'0x20bb7'</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="遍历接口"><a href="#遍历接口" class="headerlink" title="遍历接口"></a>遍历接口</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">//  � � a b c</span></div><div class="line">    <span class="keyword">let</span> str = <span class="string">`\u&#123;20bb7&#125;abc`</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'es5'</span>, str[i])</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// � a b c</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> code <span class="keyword">of</span> str) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'es6'</span>, code)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> name = <span class="string">'list'</span></div><div class="line">    <span class="keyword">let</span> info = <span class="string">'hello world'</span></div><div class="line">    <span class="keyword">let</span> m = <span class="string">`i am <span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;info&#125;</span>`</span></div><div class="line">    <span class="comment">// i am list, hello world</span></div><div class="line">    <span class="built_in">console</span>.log(m)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="includes-startsWith-endsWith"><a href="#includes-startsWith-endsWith" class="headerlink" title="includes startsWith endsWith"></a>includes startsWith endsWith</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> str = <span class="string">"string"</span></div><div class="line">    <span class="comment">// 判断包含，true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'includes'</span>, str.includes(<span class="string">"s"</span>))</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'includes'</span>, str.startsWith(<span class="string">"s"</span>))</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'includes'</span>, str.endsWith(<span class="string">"ng"</span>))</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> str = <span class="string">"abc"</span></div><div class="line">    <span class="comment">// abcabc</span></div><div class="line">    <span class="built_in">console</span>.log(str.repeat(<span class="number">2</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="padStart-padEnd"><a href="#padStart-padEnd" class="headerlink" title="padStart padEnd"></a>padStart padEnd</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;   <span class="comment">// ES7的 补白</span></div><div class="line">    <span class="comment">// 01</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'1'</span>.padStart(<span class="number">2</span>,<span class="number">0</span>))</div><div class="line">    <span class="comment">// 10</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'1'</span>.padEnd(<span class="number">2</span>,<span class="number">0</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="标签模板"><a href="#标签模板" class="headerlink" title="标签模板"></a>标签模板</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 防止 XSS 或者多余字符串</span></div><div class="line">    <span class="keyword">let</span> user = &#123;</div><div class="line">        name: <span class="string">'list'</span>,</div><div class="line">        info: <span class="string">'hello world'</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// [ 'i am ', ', ', '' ] 'list' 'hello world'</span></div><div class="line">    <span class="comment">// console.log(abc`i am $&#123;user.name&#125;, $&#123;user.info&#125;`)</span></div><div class="line"></div><div class="line">    <span class="comment">// i am ,, ,listhello world</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params">s, v1, v2</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(s, v1, v2)</div><div class="line">        <span class="keyword">return</span> s + v1 + v2</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="raw"><a href="#raw" class="headerlink" title="raw"></a>raw</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;   </div><div class="line">    <span class="comment">// Hi\n3</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">String</span>.raw<span class="string">`Hi\n<span class="subst">$&#123;<span class="number">1</span>+<span class="number">2</span>&#125;</span>`</span>)</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     *  Hi</span></div><div class="line"><span class="comment">     *  3</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`Hi\n<span class="subst">$&#123;<span class="number">1</span>+<span class="number">2</span>&#125;</span>`</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Iterator-和-for…of"><a href="#Iterator-和-for…of" class="headerlink" title="Iterator 和 for…of"></a>Iterator 和 for…of</h2><h3 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = [<span class="string">'hello'</span>, <span class="string">'world'</span>]</div><div class="line">    <span class="keyword">let</span> map = arr[<span class="built_in">Symbol</span>.iterator]()</div><div class="line">    <span class="comment">// &#123; value: 'hello', done: false &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map.next())</div><div class="line">    <span class="comment">// &#123; value: 'world', done: false &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map.next())</div><div class="line">    <span class="comment">// &#123; value: undefined, done: true &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(map.next())</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现-iterator"><a href="#实现-iterator" class="headerlink" title="实现 iterator"></a>实现 iterator</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 实现iterator接口</span></div><div class="line">    <span class="keyword">let</span> obj = &#123;</div><div class="line">        start: [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>],</div><div class="line">        end: [<span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>],</div><div class="line">        [<span class="built_in">Symbol</span>.iterator]() &#123;</div><div class="line">            <span class="keyword">let</span> self = <span class="keyword">this</span></div><div class="line">            <span class="keyword">let</span> index = <span class="number">0</span></div><div class="line">            <span class="keyword">let</span> arr = self.start.concat(self.end)</div><div class="line">            <span class="keyword">let</span> len = arr.length</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                next() &#123;</div><div class="line">                    <span class="keyword">if</span> (index &lt; len) &#123;</div><div class="line">                        <span class="keyword">return</span> &#123;</div><div class="line">                            value: arr[index++],</div><div class="line">                            done: <span class="literal">false</span></div><div class="line">                        &#125;</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="keyword">return</span> &#123;</div><div class="line">                            value: arr[index++],</div><div class="line">                            done: <span class="literal">true</span></div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> obj) &#123;</div><div class="line">        <span class="built_in">console</span>.log(key)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="for…of"><a href="#for…of" class="headerlink" title="for…of"></a>for…of</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> arr = [<span class="string">'hello'</span>, <span class="string">'world'</span>]</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> arr) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'value'</span>, value)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Generator-（比Promise更高级）"><a href="#Generator-（比Promise更高级）" class="headerlink" title="Generator （比Promise更高级）"></a>Generator （比Promise更高级）</h2><h3 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// generator 基本定义</span></div><div class="line">    <span class="keyword">let</span> tell = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">yield</span> <span class="string">'a'</span></div><div class="line">        <span class="keyword">yield</span> <span class="string">'b'</span></div><div class="line">        <span class="keyword">yield</span> <span class="string">'c'</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> ke = tell()</div><div class="line">    <span class="comment">// generator 返回的就是iterator接口</span></div><div class="line">    <span class="comment">// &#123; value: 'a', done: false &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(ke.next())</div><div class="line">    <span class="comment">// &#123; value: 'b', done: false &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(ke.next())</div><div class="line">    <span class="comment">// &#123; value: 'c', done: false &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(ke.next())</div><div class="line">    <span class="comment">// &#123; value: undefined, done: true &#125;</span></div><div class="line">    <span class="built_in">console</span>.log(ke.next())</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="generator与iterator关系"><a href="#generator与iterator关系" class="headerlink" title="generator与iterator关系"></a>generator与iterator关系</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// generator与iterator接口关系</span></div><div class="line">    <span class="keyword">let</span> obj = &#123;&#125;</div><div class="line">    obj[<span class="built_in">Symbol</span>.iterator] = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">yield</span> <span class="number">1</span></div><div class="line">        <span class="keyword">yield</span> <span class="number">2</span></div><div class="line">        <span class="keyword">yield</span> <span class="number">3</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 1 2 3</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> obj) &#123;</div><div class="line">        <span class="built_in">console</span>.log(value)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="状态机"><a href="#状态机" class="headerlink" title="状态机"></a>状态机</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 状态机</span></div><div class="line">    <span class="keyword">let</span> state = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">yield</span> <span class="string">'A'</span></div><div class="line">            <span class="keyword">yield</span> <span class="string">'B'</span></div><div class="line">            <span class="keyword">yield</span> <span class="string">'C'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> status = state()</div><div class="line">    <span class="comment">// A B C A B </span></div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#123;   <span class="comment">// async await 是 generator 的语法糖</span></div><div class="line">    <span class="keyword">let</span> state = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">await</span> <span class="string">'A'</span></div><div class="line">            <span class="keyword">await</span> <span class="string">'B'</span></div><div class="line">            <span class="keyword">await</span> <span class="string">'C'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> status = state()</div><div class="line">    <span class="comment">// A B C A B </span></div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">    <span class="built_in">console</span>.log(status.next())</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="抽奖应用"><a href="#抽奖应用" class="headerlink" title="抽奖应用"></a>抽奖应用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// generator应用：抽奖</span></div><div class="line">    <span class="keyword">let</span> draw = <span class="function"><span class="keyword">function</span> (<span class="params">count</span>) </span>&#123;</div><div class="line">        <span class="comment">// 具体抽奖逻辑</span></div><div class="line">        <span class="built_in">console</span>.info(<span class="string">`剩余<span class="subst">$&#123;count&#125;</span>次`</span>)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> residue = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">while</span> (count &gt; <span class="number">0</span>) &#123;</div><div class="line">            count--</div><div class="line">            <span class="keyword">yield</span> draw(count)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> star = residue(<span class="number">5</span>)</div><div class="line">    <span class="keyword">let</span> btn = <span class="built_in">document</span>.createElement(<span class="string">'button'</span>)</div><div class="line">    btn.id = <span class="string">'start'</span></div><div class="line">    btn.textContent = <span class="string">'抽奖'</span></div><div class="line">    <span class="built_in">document</span>.body.appendChild(btn)</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'start'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        star.next()</div><div class="line">    &#125;, <span class="literal">false</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="长轮询"><a href="#长轮询" class="headerlink" title="长轮询"></a>长轮询</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="comment">// 长轮询</span></div><div class="line">    <span class="keyword">let</span> ajax = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">yield</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</div><div class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="comment">// 这里写你调后台</span></div><div class="line">                resolve(&#123; <span class="attr">code</span>: <span class="number">0</span> &#125;)</div><div class="line">            &#125;, <span class="number">200</span>)</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> pull = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">let</span> generator = ajax()</div><div class="line">        <span class="keyword">let</span> step = generator.next()</div><div class="line">        step.value.then(<span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (d.code != <span class="number">0</span>) &#123;</div><div class="line">                setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                    <span class="built_in">console</span>.log(<span class="string">'wait'</span>)</div><div class="line">                    pull()</div><div class="line">                &#125;, <span class="number">1000</span>)</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="built_in">console</span>.log(d)</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">    pull()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="decorator（修饰器）"><a href="#decorator（修饰器）" class="headerlink" title="decorator（修饰器）"></a>decorator（修饰器）</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>是一个函数，修改行为（扩展类功能），修改类的行为（只在类起作用）</p>
<h3 id="需要安装插件"><a href="#需要安装插件" class="headerlink" title="需要安装插件"></a>需要安装插件</h3><p><code>npm install babel- plugin - transform - decorators - legacy --save-dev</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.babelrc 添加</div><div class="line">&#123;</div><div class="line">    <span class="string">"plugins"</span>:[<span class="string">"transform-decorators-legacy"</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> readonly = <span class="function"><span class="keyword">function</span> (<span class="params">tartget, name, descriptor</span>) </span>&#123;</div><div class="line">        descriptor.writable = <span class="literal">false</span></div><div class="line">        <span class="keyword">return</span> descriptor</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">        @readonly</div><div class="line">        time() &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">'2017-10-24'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> test = <span class="keyword">new</span> Test()</div><div class="line"></div><div class="line">    <span class="comment">// 会报错，不让修改</span></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">        test.time=function()&#123;</span></div><div class="line"><span class="comment">            console.log('rest time')</span></div><div class="line"><span class="comment">        &#125;</span></div><div class="line"><span class="comment">    */</span></div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(test.time())</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> typename = <span class="function"><span class="keyword">function</span> (<span class="params">tartget, name, descriptor</span>) </span>&#123;</div><div class="line">        tartget.myname = <span class="string">'hello'</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @typename</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Tes</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 类修饰符 hello</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'类修饰符'</span>，Test.myname)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="第三方库-core-decorators"><a href="#第三方库-core-decorators" class="headerlink" title="第三方库 core-decorators"></a>第三方库 core-decorators</h3><p><code>npm install core-decorators</code></p>
<h3 id="案例-埋点日志"><a href="#案例-埋点日志" class="headerlink" title="案例-埋点日志"></a>案例-埋点日志</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> log = <span class="function">(<span class="params">type</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">tartget, name, descriptor</span>) </span>&#123;</div><div class="line">            <span class="keyword">let</span> src_method = descriptor.value</div><div class="line">            descriptor.value = <span class="function">(<span class="params">...arg</span>) =&gt;</span> &#123;</div><div class="line">                src_method.apply(tartget, arg)</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">`log <span class="subst">$&#123;type&#125;</span>`</span>)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">AD</span> </span>&#123;</div><div class="line">        @log(<span class="string">'show'</span>)</div><div class="line">        show()&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'ad is show'</span>)</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        @log(<span class="string">'click'</span>)</div><div class="line">        click()&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'ad is click'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">let</span> ad = <span class="keyword">new</span> AD()</div><div class="line">    ad.show()</div><div class="line">    ad.click()</div><div class="line"></div><div class="line">    <span class="comment">// 依次打印</span></div><div class="line">    <span class="comment">// ad is show</span></div><div class="line">    <span class="comment">// log show</span></div><div class="line">    <span class="comment">// ad is click</span></div><div class="line">    <span class="comment">// log click</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="ES6-模块化"><a href="#ES6-模块化" class="headerlink" title="ES6 模块化"></a>ES6 模块化</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">let</span> A = <span class="number">123</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'test'</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">    test() &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'class test'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">import</span> &#123; A, test, Hello &#125; <span class="keyword">from</span> <span class="string">'./module'</span></div><div class="line"><span class="built_in">console</span>.log(A, test, Hello)</div><div class="line"></div><div class="line"><span class="comment">// 或者</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> lesson <span class="keyword">from</span> <span class="string">'./module'</span></div><div class="line"><span class="built_in">console</span>.log(lesson.A, lesson.test)</div></pre></td></tr></table></figure>
<h3 id="export-default-（推荐）"><a href="#export-default-（推荐）" class="headerlink" title="export default （推荐）"></a>export default （推荐）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 推荐用 export default</span></div><div class="line"><span class="keyword">let</span> A = <span class="number">123</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> test = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'test'</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">    test() &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'class test'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">    A,</div><div class="line">    test,</div><div class="line">    Hello</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 名字随便 推荐这种</span></div><div class="line"><span class="keyword">import</span> Lesson <span class="keyword">from</span> <span class="string">'./module'</span></div><div class="line"><span class="built_in">console</span>.log(Lesson.A)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> JS 基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
